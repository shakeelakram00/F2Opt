// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
// Version: 2022.2.2
// Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MatrixVectorActivation_3_Matrix_Vector_Activate_Stream_Batch (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in0_V_TVALID,
        weights_V_TVALID,
        out_V_TREADY,
        in0_V_TDATA,
        in0_V_TREADY,
        out_V_TDATA,
        out_V_TVALID,
        weights_V_TDATA,
        weights_V_TREADY
);

parameter    ap_ST_iter0_fsm_state1 = 1'd1;
parameter    ap_ST_iter1_fsm_state2 = 2'd2;
parameter    ap_ST_iter1_fsm_state0 = 2'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   in0_V_TVALID;
input   weights_V_TVALID;
input   out_V_TREADY;
input  [7:0] in0_V_TDATA;
output   in0_V_TREADY;
output  [79:0] out_V_TDATA;
output   out_V_TVALID;
input  [39:0] weights_V_TDATA;
output   weights_V_TREADY;

reg ap_idle;
reg in0_V_TREADY;
reg out_V_TVALID;
reg weights_V_TREADY;

reg   [0:0] ap_CS_iter0_fsm;
wire    ap_CS_iter0_fsm_state1;
reg   [1:0] ap_CS_iter1_fsm;
wire    ap_CS_iter1_fsm_state0;
wire   [0:0] icmp_ln249_fu_208_p2;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln249_reg_1750;
wire   [0:0] icmp_ln249_reg_1750_pp0_iter0_reg;
reg   [0:0] icmp_ln290_reg_1868;
reg    ap_predicate_op276_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state2_io;
wire    ap_CS_iter1_fsm_state2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    in0_V_TDATA_blk_n;
reg    out_V_TDATA_blk_n;
reg    weights_V_TDATA_blk_n;
wire   [0:0] icmp_ln272_fu_227_p2;
reg   [0:0] icmp_ln272_reg_1754;
wire   [0:0] xor_ln1019_3_fu_291_p2;
reg   [0:0] xor_ln1019_3_reg_1768;
wire   [1:0] add_ln840_2_fu_351_p2;
reg   [1:0] add_ln840_2_reg_1773;
wire   [0:0] xor_ln1019_11_fu_411_p2;
reg   [0:0] xor_ln1019_11_reg_1778;
wire   [1:0] add_ln840_6_fu_455_p2;
reg   [1:0] add_ln840_6_reg_1783;
wire   [0:0] xor_ln1019_19_fu_515_p2;
reg   [0:0] xor_ln1019_19_reg_1788;
wire   [1:0] add_ln840_10_fu_559_p2;
reg   [1:0] add_ln840_10_reg_1793;
wire   [0:0] xor_ln1019_27_fu_619_p2;
reg   [0:0] xor_ln1019_27_reg_1798;
wire   [1:0] add_ln840_14_fu_663_p2;
reg   [1:0] add_ln840_14_reg_1803;
wire   [0:0] xor_ln1019_35_fu_723_p2;
reg   [0:0] xor_ln1019_35_reg_1808;
wire   [1:0] add_ln840_18_fu_767_p2;
reg   [1:0] add_ln840_18_reg_1813;
wire   [0:0] xor_ln1019_43_fu_827_p2;
reg   [0:0] xor_ln1019_43_reg_1818;
wire   [1:0] add_ln840_22_fu_871_p2;
reg   [1:0] add_ln840_22_reg_1823;
wire   [0:0] xor_ln1019_51_fu_931_p2;
reg   [0:0] xor_ln1019_51_reg_1828;
wire   [1:0] add_ln840_26_fu_975_p2;
reg   [1:0] add_ln840_26_reg_1833;
wire   [0:0] xor_ln1019_59_fu_1035_p2;
reg   [0:0] xor_ln1019_59_reg_1838;
wire   [1:0] add_ln840_30_fu_1079_p2;
reg   [1:0] add_ln840_30_reg_1843;
wire   [0:0] xor_ln1019_67_fu_1139_p2;
reg   [0:0] xor_ln1019_67_reg_1848;
wire   [1:0] add_ln840_34_fu_1183_p2;
reg   [1:0] add_ln840_34_reg_1853;
wire   [0:0] xor_ln1019_75_fu_1243_p2;
reg   [0:0] xor_ln1019_75_reg_1858;
wire   [1:0] add_ln840_38_fu_1287_p2;
reg   [1:0] add_ln840_38_reg_1863;
wire   [0:0] icmp_ln290_fu_1299_p2;
reg   [31:0] sf_fu_128;
wire   [31:0] sf_1_fu_1293_p2;
wire    ap_loop_init;
reg   [31:0] ap_sig_allocacmp_sf_load;
reg   [4:0] i_fu_132;
wire   [4:0] i_2_fu_214_p2;
reg   [4:0] ap_sig_allocacmp_i_1;
reg   [7:0] add_i_i_i2_33974_fu_136;
wire   [7:0] add_ln840_3_fu_1432_p2;
reg   [7:0] add_i_i_i2_1_376_fu_140;
wire   [7:0] add_ln840_7_fu_1450_p2;
reg   [7:0] add_i_i_i2_2_378_fu_144;
wire   [7:0] add_ln840_11_fu_1468_p2;
reg   [7:0] add_i_i_i2_3_380_fu_148;
wire   [7:0] add_ln840_15_fu_1486_p2;
reg   [7:0] add_i_i_i2_4_382_fu_152;
wire   [7:0] add_ln840_19_fu_1504_p2;
reg   [7:0] add_i_i_i2_5_384_fu_156;
wire   [7:0] add_ln840_23_fu_1522_p2;
reg   [7:0] add_i_i_i2_6_386_fu_160;
wire   [7:0] add_ln840_27_fu_1540_p2;
reg   [7:0] add_i_i_i2_7_388_fu_164;
wire   [7:0] add_ln840_31_fu_1558_p2;
reg   [7:0] add_i_i_i2_8_390_fu_168;
wire   [7:0] add_ln840_35_fu_1576_p2;
reg   [7:0] add_i_i_i2_9_392_fu_172;
wire   [7:0] add_ln840_39_fu_1594_p2;
wire   [0:0] p_Result_s_fu_223_p1;
wire   [0:0] local_temp_V_fu_233_p1;
wire   [0:0] xor_ln1019_fu_261_p2;
wire   [0:0] xor_ln1019_1_fu_267_p2;
wire   [0:0] p_Result_1_fu_277_p3;
wire   [0:0] local_temp_V_1_fu_237_p3;
wire   [0:0] xor_ln1019_2_fu_285_p2;
wire   [0:0] p_Result_2_fu_297_p3;
wire   [0:0] local_temp_V_2_fu_245_p3;
wire   [0:0] xor_ln1019_4_fu_305_p2;
wire   [0:0] xor_ln1019_5_fu_311_p2;
wire   [0:0] p_Result_3_fu_321_p3;
wire   [0:0] local_temp_V_3_fu_253_p3;
wire   [0:0] xor_ln1019_6_fu_329_p2;
wire   [0:0] xor_ln1019_7_fu_335_p2;
wire   [1:0] zext_ln780_fu_273_p1;
wire   [1:0] zext_ln840_1_fu_341_p1;
wire   [1:0] add_ln840_1_fu_345_p2;
wire   [1:0] zext_ln780_1_fu_317_p1;
wire   [0:0] local_temp_V_4_fu_357_p3;
wire   [0:0] xor_ln1019_8_fu_389_p2;
wire   [0:0] xor_ln1019_9_fu_395_p2;
wire   [0:0] local_temp_V_5_fu_365_p3;
wire   [0:0] xor_ln1019_10_fu_405_p2;
wire   [0:0] local_temp_V_6_fu_373_p3;
wire   [0:0] xor_ln1019_12_fu_417_p2;
wire   [0:0] xor_ln1019_13_fu_423_p2;
wire   [0:0] local_temp_V_7_fu_381_p3;
wire   [0:0] xor_ln1019_14_fu_433_p2;
wire   [0:0] xor_ln1019_15_fu_439_p2;
wire   [1:0] zext_ln1019_fu_401_p1;
wire   [1:0] zext_ln840_4_fu_445_p1;
wire   [1:0] add_ln840_5_fu_449_p2;
wire   [1:0] zext_ln1019_1_fu_429_p1;
wire   [0:0] local_temp_V_8_fu_461_p3;
wire   [0:0] xor_ln1019_16_fu_493_p2;
wire   [0:0] xor_ln1019_17_fu_499_p2;
wire   [0:0] local_temp_V_9_fu_469_p3;
wire   [0:0] xor_ln1019_18_fu_509_p2;
wire   [0:0] local_temp_V_10_fu_477_p3;
wire   [0:0] xor_ln1019_20_fu_521_p2;
wire   [0:0] xor_ln1019_21_fu_527_p2;
wire   [0:0] local_temp_V_11_fu_485_p3;
wire   [0:0] xor_ln1019_22_fu_537_p2;
wire   [0:0] xor_ln1019_23_fu_543_p2;
wire   [1:0] zext_ln1019_2_fu_505_p1;
wire   [1:0] zext_ln840_7_fu_549_p1;
wire   [1:0] add_ln840_9_fu_553_p2;
wire   [1:0] zext_ln1019_3_fu_533_p1;
wire   [0:0] local_temp_V_12_fu_565_p3;
wire   [0:0] xor_ln1019_24_fu_597_p2;
wire   [0:0] xor_ln1019_25_fu_603_p2;
wire   [0:0] local_temp_V_13_fu_573_p3;
wire   [0:0] xor_ln1019_26_fu_613_p2;
wire   [0:0] local_temp_V_14_fu_581_p3;
wire   [0:0] xor_ln1019_28_fu_625_p2;
wire   [0:0] xor_ln1019_29_fu_631_p2;
wire   [0:0] local_temp_V_15_fu_589_p3;
wire   [0:0] xor_ln1019_30_fu_641_p2;
wire   [0:0] xor_ln1019_31_fu_647_p2;
wire   [1:0] zext_ln1019_4_fu_609_p1;
wire   [1:0] zext_ln840_10_fu_653_p1;
wire   [1:0] add_ln840_13_fu_657_p2;
wire   [1:0] zext_ln1019_5_fu_637_p1;
wire   [0:0] local_temp_V_16_fu_669_p3;
wire   [0:0] xor_ln1019_32_fu_701_p2;
wire   [0:0] xor_ln1019_33_fu_707_p2;
wire   [0:0] local_temp_V_17_fu_677_p3;
wire   [0:0] xor_ln1019_34_fu_717_p2;
wire   [0:0] local_temp_V_18_fu_685_p3;
wire   [0:0] xor_ln1019_36_fu_729_p2;
wire   [0:0] xor_ln1019_37_fu_735_p2;
wire   [0:0] local_temp_V_19_fu_693_p3;
wire   [0:0] xor_ln1019_38_fu_745_p2;
wire   [0:0] xor_ln1019_39_fu_751_p2;
wire   [1:0] zext_ln1019_6_fu_713_p1;
wire   [1:0] zext_ln840_13_fu_757_p1;
wire   [1:0] add_ln840_17_fu_761_p2;
wire   [1:0] zext_ln1019_7_fu_741_p1;
wire   [0:0] local_temp_V_20_fu_773_p3;
wire   [0:0] xor_ln1019_40_fu_805_p2;
wire   [0:0] xor_ln1019_41_fu_811_p2;
wire   [0:0] local_temp_V_21_fu_781_p3;
wire   [0:0] xor_ln1019_42_fu_821_p2;
wire   [0:0] local_temp_V_22_fu_789_p3;
wire   [0:0] xor_ln1019_44_fu_833_p2;
wire   [0:0] xor_ln1019_45_fu_839_p2;
wire   [0:0] local_temp_V_23_fu_797_p3;
wire   [0:0] xor_ln1019_46_fu_849_p2;
wire   [0:0] xor_ln1019_47_fu_855_p2;
wire   [1:0] zext_ln1019_8_fu_817_p1;
wire   [1:0] zext_ln840_16_fu_861_p1;
wire   [1:0] add_ln840_21_fu_865_p2;
wire   [1:0] zext_ln1019_9_fu_845_p1;
wire   [0:0] local_temp_V_24_fu_877_p3;
wire   [0:0] xor_ln1019_48_fu_909_p2;
wire   [0:0] xor_ln1019_49_fu_915_p2;
wire   [0:0] local_temp_V_25_fu_885_p3;
wire   [0:0] xor_ln1019_50_fu_925_p2;
wire   [0:0] local_temp_V_26_fu_893_p3;
wire   [0:0] xor_ln1019_52_fu_937_p2;
wire   [0:0] xor_ln1019_53_fu_943_p2;
wire   [0:0] local_temp_V_27_fu_901_p3;
wire   [0:0] xor_ln1019_54_fu_953_p2;
wire   [0:0] xor_ln1019_55_fu_959_p2;
wire   [1:0] zext_ln1019_10_fu_921_p1;
wire   [1:0] zext_ln840_19_fu_965_p1;
wire   [1:0] add_ln840_25_fu_969_p2;
wire   [1:0] zext_ln1019_11_fu_949_p1;
wire   [0:0] local_temp_V_28_fu_981_p3;
wire   [0:0] xor_ln1019_56_fu_1013_p2;
wire   [0:0] xor_ln1019_57_fu_1019_p2;
wire   [0:0] local_temp_V_29_fu_989_p3;
wire   [0:0] xor_ln1019_58_fu_1029_p2;
wire   [0:0] local_temp_V_30_fu_997_p3;
wire   [0:0] xor_ln1019_60_fu_1041_p2;
wire   [0:0] xor_ln1019_61_fu_1047_p2;
wire   [0:0] local_temp_V_31_fu_1005_p3;
wire   [0:0] xor_ln1019_62_fu_1057_p2;
wire   [0:0] xor_ln1019_63_fu_1063_p2;
wire   [1:0] zext_ln1019_12_fu_1025_p1;
wire   [1:0] zext_ln840_22_fu_1069_p1;
wire   [1:0] add_ln840_29_fu_1073_p2;
wire   [1:0] zext_ln1019_13_fu_1053_p1;
wire   [0:0] local_temp_V_32_fu_1085_p3;
wire   [0:0] xor_ln1019_64_fu_1117_p2;
wire   [0:0] xor_ln1019_65_fu_1123_p2;
wire   [0:0] local_temp_V_33_fu_1093_p3;
wire   [0:0] xor_ln1019_66_fu_1133_p2;
wire   [0:0] local_temp_V_34_fu_1101_p3;
wire   [0:0] xor_ln1019_68_fu_1145_p2;
wire   [0:0] xor_ln1019_69_fu_1151_p2;
wire   [0:0] local_temp_V_35_fu_1109_p3;
wire   [0:0] xor_ln1019_70_fu_1161_p2;
wire   [0:0] xor_ln1019_71_fu_1167_p2;
wire   [1:0] zext_ln1019_14_fu_1129_p1;
wire   [1:0] zext_ln840_25_fu_1173_p1;
wire   [1:0] add_ln840_33_fu_1177_p2;
wire   [1:0] zext_ln1019_15_fu_1157_p1;
wire   [0:0] local_temp_V_36_fu_1189_p3;
wire   [0:0] xor_ln1019_72_fu_1221_p2;
wire   [0:0] xor_ln1019_73_fu_1227_p2;
wire   [0:0] local_temp_V_37_fu_1197_p3;
wire   [0:0] xor_ln1019_74_fu_1237_p2;
wire   [0:0] local_temp_V_38_fu_1205_p3;
wire   [0:0] xor_ln1019_76_fu_1249_p2;
wire   [0:0] xor_ln1019_77_fu_1255_p2;
wire   [0:0] local_temp_V_39_fu_1213_p3;
wire   [0:0] xor_ln1019_78_fu_1265_p2;
wire   [0:0] xor_ln1019_79_fu_1271_p2;
wire   [1:0] zext_ln1019_16_fu_1233_p1;
wire   [1:0] zext_ln840_28_fu_1277_p1;
wire   [1:0] add_ln840_37_fu_1281_p2;
wire   [1:0] zext_ln1019_17_fu_1261_p1;
wire   [7:0] select_ln272_9_fu_1413_p3;
wire   [7:0] zext_ln840_fu_1420_p1;
wire   [7:0] add_ln840_fu_1426_p2;
wire   [7:0] zext_ln840_2_fu_1423_p1;
wire   [7:0] select_ln272_8_fu_1406_p3;
wire   [7:0] zext_ln840_3_fu_1438_p1;
wire   [7:0] add_ln840_4_fu_1444_p2;
wire   [7:0] zext_ln840_5_fu_1441_p1;
wire   [7:0] select_ln272_7_fu_1399_p3;
wire   [7:0] zext_ln840_6_fu_1456_p1;
wire   [7:0] add_ln840_8_fu_1462_p2;
wire   [7:0] zext_ln840_8_fu_1459_p1;
wire   [7:0] select_ln272_6_fu_1392_p3;
wire   [7:0] zext_ln840_9_fu_1474_p1;
wire   [7:0] add_ln840_12_fu_1480_p2;
wire   [7:0] zext_ln840_11_fu_1477_p1;
wire   [7:0] select_ln272_5_fu_1385_p3;
wire   [7:0] zext_ln840_12_fu_1492_p1;
wire   [7:0] add_ln840_16_fu_1498_p2;
wire   [7:0] zext_ln840_14_fu_1495_p1;
wire   [7:0] select_ln272_4_fu_1378_p3;
wire   [7:0] zext_ln840_15_fu_1510_p1;
wire   [7:0] add_ln840_20_fu_1516_p2;
wire   [7:0] zext_ln840_17_fu_1513_p1;
wire   [7:0] select_ln272_3_fu_1371_p3;
wire   [7:0] zext_ln840_18_fu_1528_p1;
wire   [7:0] add_ln840_24_fu_1534_p2;
wire   [7:0] zext_ln840_20_fu_1531_p1;
wire   [7:0] select_ln272_2_fu_1364_p3;
wire   [7:0] zext_ln840_21_fu_1546_p1;
wire   [7:0] add_ln840_28_fu_1552_p2;
wire   [7:0] zext_ln840_23_fu_1549_p1;
wire   [7:0] select_ln272_1_fu_1357_p3;
wire   [7:0] zext_ln840_24_fu_1564_p1;
wire   [7:0] add_ln840_32_fu_1570_p2;
wire   [7:0] zext_ln840_26_fu_1567_p1;
wire   [7:0] select_ln272_fu_1350_p3;
wire   [7:0] zext_ln840_27_fu_1582_p1;
wire   [7:0] add_ln840_36_fu_1588_p2;
wire   [7:0] zext_ln840_29_fu_1585_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_iter0_fsm;
reg   [1:0] ap_NS_iter1_fsm;
reg    ap_ST_iter0_fsm_state1_blk;
reg    ap_ST_iter1_fsm_state2_blk;
wire    ap_start_int;
reg    ap_condition_1232;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_iter0_fsm = 1'd1;
#0 ap_CS_iter1_fsm = 2'd1;
#0 ap_done_reg = 1'b0;
end

MatrixVectorActivation_3_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((1'b1 == ap_block_state2_io) | ((ap_predicate_op276_write_state2 == 1'b1) & (out_V_TREADY == 1'b0))) & (1'b1 == ap_CS_iter1_fsm_state2) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state2_io) | ((ap_predicate_op276_write_state2 == 1'b1) & (out_V_TREADY == 1'b0))) & (ap_loop_exit_ready == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op276_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_208_p2 == 1'd0)) | ((icmp_ln249_fu_208_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1232)) begin
        if ((icmp_ln249_fu_208_p2 == 1'd0)) begin
            i_fu_132 <= i_2_fu_214_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_132 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1232)) begin
        if (((icmp_ln249_fu_208_p2 == 1'd0) & (icmp_ln290_fu_1299_p2 == 1'd1))) begin
            sf_fu_128 <= 32'd0;
        end else if (((icmp_ln249_fu_208_p2 == 1'd0) & (icmp_ln290_fu_1299_p2 == 1'd0))) begin
            sf_fu_128 <= sf_1_fu_1293_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            sf_fu_128 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state2_io) | ((ap_predicate_op276_write_state2 == 1'b1) & (out_V_TREADY == 1'b0))) & (icmp_ln249_reg_1750 == 1'd0) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        add_i_i_i2_1_376_fu_140 <= add_ln840_7_fu_1450_p2;
        add_i_i_i2_2_378_fu_144 <= add_ln840_11_fu_1468_p2;
        add_i_i_i2_33974_fu_136 <= add_ln840_3_fu_1432_p2;
        add_i_i_i2_3_380_fu_148 <= add_ln840_15_fu_1486_p2;
        add_i_i_i2_4_382_fu_152 <= add_ln840_19_fu_1504_p2;
        add_i_i_i2_5_384_fu_156 <= add_ln840_23_fu_1522_p2;
        add_i_i_i2_6_386_fu_160 <= add_ln840_27_fu_1540_p2;
        add_i_i_i2_7_388_fu_164 <= add_ln840_31_fu_1558_p2;
        add_i_i_i2_8_390_fu_168 <= add_ln840_35_fu_1576_p2;
        add_i_i_i2_9_392_fu_172 <= add_ln840_39_fu_1594_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op276_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_208_p2 == 1'd0)) | ((icmp_ln249_fu_208_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (icmp_ln249_fu_208_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        add_ln840_10_reg_1793 <= add_ln840_10_fu_559_p2;
        add_ln840_14_reg_1803 <= add_ln840_14_fu_663_p2;
        add_ln840_18_reg_1813 <= add_ln840_18_fu_767_p2;
        add_ln840_22_reg_1823 <= add_ln840_22_fu_871_p2;
        add_ln840_26_reg_1833 <= add_ln840_26_fu_975_p2;
        add_ln840_2_reg_1773 <= add_ln840_2_fu_351_p2;
        add_ln840_30_reg_1843 <= add_ln840_30_fu_1079_p2;
        add_ln840_34_reg_1853 <= add_ln840_34_fu_1183_p2;
        add_ln840_38_reg_1863 <= add_ln840_38_fu_1287_p2;
        add_ln840_6_reg_1783 <= add_ln840_6_fu_455_p2;
        icmp_ln272_reg_1754 <= icmp_ln272_fu_227_p2;
        icmp_ln290_reg_1868 <= icmp_ln290_fu_1299_p2;
        xor_ln1019_11_reg_1778 <= xor_ln1019_11_fu_411_p2;
        xor_ln1019_19_reg_1788 <= xor_ln1019_19_fu_515_p2;
        xor_ln1019_27_reg_1798 <= xor_ln1019_27_fu_619_p2;
        xor_ln1019_35_reg_1808 <= xor_ln1019_35_fu_723_p2;
        xor_ln1019_3_reg_1768 <= xor_ln1019_3_fu_291_p2;
        xor_ln1019_43_reg_1818 <= xor_ln1019_43_fu_827_p2;
        xor_ln1019_51_reg_1828 <= xor_ln1019_51_fu_931_p2;
        xor_ln1019_59_reg_1838 <= xor_ln1019_59_fu_1035_p2;
        xor_ln1019_67_reg_1848 <= xor_ln1019_67_fu_1139_p2;
        xor_ln1019_75_reg_1858 <= xor_ln1019_75_fu_1243_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op276_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_208_p2 == 1'd0)) | ((icmp_ln249_fu_208_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        icmp_ln249_reg_1750 <= icmp_ln249_fu_208_p2;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_208_p2 == 1'd0)) | ((icmp_ln249_fu_208_p2 == 1'd0) & (in0_V_TVALID == 1'b0)))) begin
        ap_ST_iter0_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_iter0_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_block_state2_io) | ((ap_predicate_op276_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) begin
        ap_ST_iter1_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_iter1_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op276_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_208_p2 == 1'd0)) | ((icmp_ln249_fu_208_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (icmp_ln249_fu_208_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state2_io) | ((ap_predicate_op276_write_state2 == 1'b1) & (out_V_TREADY == 1'b0))) & (1'b1 == ap_CS_iter1_fsm_state2) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter1_fsm_state0) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op276_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_208_p2 == 1'd0)) | ((icmp_ln249_fu_208_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_1 = 5'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_132;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_sf_load = 32'd0;
    end else begin
        ap_sig_allocacmp_sf_load = sf_fu_128;
    end
end

always @ (*) begin
    if (((icmp_ln249_fu_208_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_start_int == 1'b1))) begin
        in0_V_TDATA_blk_n = in0_V_TVALID;
    end else begin
        in0_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op276_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_208_p2 == 1'd0)) | ((icmp_ln249_fu_208_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (icmp_ln249_fu_208_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        in0_V_TREADY = 1'b1;
    end else begin
        in0_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op276_write_state2 == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        out_V_TDATA_blk_n = out_V_TREADY;
    end else begin
        out_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state2_io) | ((ap_predicate_op276_write_state2 == 1'b1) & (out_V_TREADY == 1'b0))) & (ap_predicate_op276_write_state2 == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        out_V_TVALID = 1'b1;
    end else begin
        out_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln249_fu_208_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_start_int == 1'b1))) begin
        weights_V_TDATA_blk_n = weights_V_TVALID;
    end else begin
        weights_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op276_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_208_p2 == 1'd0)) | ((icmp_ln249_fu_208_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (icmp_ln249_fu_208_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        weights_V_TREADY = 1'b1;
    end else begin
        weights_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state2 : begin
            if ((~((1'b1 == ap_block_state2_io) | ((ap_predicate_op276_write_state2 == 1'b1) & (out_V_TREADY == 1'b0))) & ((1'b0 == ap_CS_iter0_fsm_state1) | ((1'b1 == ap_CS_iter0_fsm_state1) & ((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_208_p2 == 1'd0)) | ((icmp_ln249_fu_208_p2 == 1'd0) & (in0_V_TVALID == 1'b0))))))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else if (((~((1'b1 == ap_block_state2_io) | ((ap_predicate_op276_write_state2 == 1'b1) & (out_V_TREADY == 1'b0))) & ~((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_208_p2 == 1'd0)) | ((icmp_ln249_fu_208_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b1 == ap_block_state2_io) | ((ap_predicate_op276_write_state2 == 1'b1) & (out_V_TREADY == 1'b0))) & (icmp_ln249_reg_1750_pp0_iter0_reg == 1'd1) & (1'b1 == ap_CS_iter1_fsm_state2)))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op276_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_208_p2 == 1'd0)) | ((icmp_ln249_fu_208_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

assign add_ln840_10_fu_559_p2 = (add_ln840_9_fu_553_p2 + zext_ln1019_3_fu_533_p1);

assign add_ln840_11_fu_1468_p2 = (add_ln840_8_fu_1462_p2 + zext_ln840_8_fu_1459_p1);

assign add_ln840_12_fu_1480_p2 = (select_ln272_6_fu_1392_p3 + zext_ln840_9_fu_1474_p1);

assign add_ln840_13_fu_657_p2 = (zext_ln1019_4_fu_609_p1 + zext_ln840_10_fu_653_p1);

assign add_ln840_14_fu_663_p2 = (add_ln840_13_fu_657_p2 + zext_ln1019_5_fu_637_p1);

assign add_ln840_15_fu_1486_p2 = (add_ln840_12_fu_1480_p2 + zext_ln840_11_fu_1477_p1);

assign add_ln840_16_fu_1498_p2 = (select_ln272_5_fu_1385_p3 + zext_ln840_12_fu_1492_p1);

assign add_ln840_17_fu_761_p2 = (zext_ln1019_6_fu_713_p1 + zext_ln840_13_fu_757_p1);

assign add_ln840_18_fu_767_p2 = (add_ln840_17_fu_761_p2 + zext_ln1019_7_fu_741_p1);

assign add_ln840_19_fu_1504_p2 = (add_ln840_16_fu_1498_p2 + zext_ln840_14_fu_1495_p1);

assign add_ln840_1_fu_345_p2 = (zext_ln780_fu_273_p1 + zext_ln840_1_fu_341_p1);

assign add_ln840_20_fu_1516_p2 = (select_ln272_4_fu_1378_p3 + zext_ln840_15_fu_1510_p1);

assign add_ln840_21_fu_865_p2 = (zext_ln1019_8_fu_817_p1 + zext_ln840_16_fu_861_p1);

assign add_ln840_22_fu_871_p2 = (add_ln840_21_fu_865_p2 + zext_ln1019_9_fu_845_p1);

assign add_ln840_23_fu_1522_p2 = (add_ln840_20_fu_1516_p2 + zext_ln840_17_fu_1513_p1);

assign add_ln840_24_fu_1534_p2 = (select_ln272_3_fu_1371_p3 + zext_ln840_18_fu_1528_p1);

assign add_ln840_25_fu_969_p2 = (zext_ln1019_10_fu_921_p1 + zext_ln840_19_fu_965_p1);

assign add_ln840_26_fu_975_p2 = (add_ln840_25_fu_969_p2 + zext_ln1019_11_fu_949_p1);

assign add_ln840_27_fu_1540_p2 = (add_ln840_24_fu_1534_p2 + zext_ln840_20_fu_1531_p1);

assign add_ln840_28_fu_1552_p2 = (select_ln272_2_fu_1364_p3 + zext_ln840_21_fu_1546_p1);

assign add_ln840_29_fu_1073_p2 = (zext_ln1019_12_fu_1025_p1 + zext_ln840_22_fu_1069_p1);

assign add_ln840_2_fu_351_p2 = (add_ln840_1_fu_345_p2 + zext_ln780_1_fu_317_p1);

assign add_ln840_30_fu_1079_p2 = (add_ln840_29_fu_1073_p2 + zext_ln1019_13_fu_1053_p1);

assign add_ln840_31_fu_1558_p2 = (add_ln840_28_fu_1552_p2 + zext_ln840_23_fu_1549_p1);

assign add_ln840_32_fu_1570_p2 = (select_ln272_1_fu_1357_p3 + zext_ln840_24_fu_1564_p1);

assign add_ln840_33_fu_1177_p2 = (zext_ln1019_14_fu_1129_p1 + zext_ln840_25_fu_1173_p1);

assign add_ln840_34_fu_1183_p2 = (add_ln840_33_fu_1177_p2 + zext_ln1019_15_fu_1157_p1);

assign add_ln840_35_fu_1576_p2 = (add_ln840_32_fu_1570_p2 + zext_ln840_26_fu_1567_p1);

assign add_ln840_36_fu_1588_p2 = (select_ln272_fu_1350_p3 + zext_ln840_27_fu_1582_p1);

assign add_ln840_37_fu_1281_p2 = (zext_ln1019_16_fu_1233_p1 + zext_ln840_28_fu_1277_p1);

assign add_ln840_38_fu_1287_p2 = (add_ln840_37_fu_1281_p2 + zext_ln1019_17_fu_1261_p1);

assign add_ln840_39_fu_1594_p2 = (add_ln840_36_fu_1588_p2 + zext_ln840_29_fu_1585_p1);

assign add_ln840_3_fu_1432_p2 = (add_ln840_fu_1426_p2 + zext_ln840_2_fu_1423_p1);

assign add_ln840_4_fu_1444_p2 = (select_ln272_8_fu_1406_p3 + zext_ln840_3_fu_1438_p1);

assign add_ln840_5_fu_449_p2 = (zext_ln1019_fu_401_p1 + zext_ln840_4_fu_445_p1);

assign add_ln840_6_fu_455_p2 = (add_ln840_5_fu_449_p2 + zext_ln1019_1_fu_429_p1);

assign add_ln840_7_fu_1450_p2 = (add_ln840_4_fu_1444_p2 + zext_ln840_5_fu_1441_p1);

assign add_ln840_8_fu_1462_p2 = (select_ln272_7_fu_1399_p3 + zext_ln840_6_fu_1456_p1);

assign add_ln840_9_fu_553_p2 = (zext_ln1019_2_fu_505_p1 + zext_ln840_7_fu_549_p1);

assign add_ln840_fu_1426_p2 = (select_ln272_9_fu_1413_p3 + zext_ln840_fu_1420_p1);

assign ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm[32'd0];

assign ap_CS_iter1_fsm_state0 = ap_CS_iter1_fsm[32'd0];

assign ap_CS_iter1_fsm_state2 = ap_CS_iter1_fsm[32'd1];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_208_p2 == 1'd0)) | ((icmp_ln249_fu_208_p2 == 1'd0) & (in0_V_TVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state2_io = ((ap_predicate_op276_write_state2 == 1'b1) & (out_V_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op276_write_state2 == 1'b1) & (out_V_TREADY == 1'b0));
end

always @ (*) begin
    ap_condition_1232 = (~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op276_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_208_p2 == 1'd0)) | ((icmp_ln249_fu_208_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op276_write_state2 = ((icmp_ln290_reg_1868 == 1'd1) & (icmp_ln249_reg_1750 == 1'd0));
end

assign i_2_fu_214_p2 = (ap_sig_allocacmp_i_1 + 5'd1);

assign icmp_ln249_fu_208_p2 = ((ap_sig_allocacmp_i_1 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln249_reg_1750_pp0_iter0_reg = icmp_ln249_reg_1750;

assign icmp_ln272_fu_227_p2 = ((ap_sig_allocacmp_sf_load == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln290_fu_1299_p2 = ((sf_1_fu_1293_p2 == 32'd16) ? 1'b1 : 1'b0);

assign local_temp_V_10_fu_477_p3 = weights_V_TDATA[32'd10];

assign local_temp_V_11_fu_485_p3 = weights_V_TDATA[32'd11];

assign local_temp_V_12_fu_565_p3 = weights_V_TDATA[32'd12];

assign local_temp_V_13_fu_573_p3 = weights_V_TDATA[32'd13];

assign local_temp_V_14_fu_581_p3 = weights_V_TDATA[32'd14];

assign local_temp_V_15_fu_589_p3 = weights_V_TDATA[32'd15];

assign local_temp_V_16_fu_669_p3 = weights_V_TDATA[32'd16];

assign local_temp_V_17_fu_677_p3 = weights_V_TDATA[32'd17];

assign local_temp_V_18_fu_685_p3 = weights_V_TDATA[32'd18];

assign local_temp_V_19_fu_693_p3 = weights_V_TDATA[32'd19];

assign local_temp_V_1_fu_237_p3 = weights_V_TDATA[32'd1];

assign local_temp_V_20_fu_773_p3 = weights_V_TDATA[32'd20];

assign local_temp_V_21_fu_781_p3 = weights_V_TDATA[32'd21];

assign local_temp_V_22_fu_789_p3 = weights_V_TDATA[32'd22];

assign local_temp_V_23_fu_797_p3 = weights_V_TDATA[32'd23];

assign local_temp_V_24_fu_877_p3 = weights_V_TDATA[32'd24];

assign local_temp_V_25_fu_885_p3 = weights_V_TDATA[32'd25];

assign local_temp_V_26_fu_893_p3 = weights_V_TDATA[32'd26];

assign local_temp_V_27_fu_901_p3 = weights_V_TDATA[32'd27];

assign local_temp_V_28_fu_981_p3 = weights_V_TDATA[32'd28];

assign local_temp_V_29_fu_989_p3 = weights_V_TDATA[32'd29];

assign local_temp_V_2_fu_245_p3 = weights_V_TDATA[32'd2];

assign local_temp_V_30_fu_997_p3 = weights_V_TDATA[32'd30];

assign local_temp_V_31_fu_1005_p3 = weights_V_TDATA[32'd31];

assign local_temp_V_32_fu_1085_p3 = weights_V_TDATA[32'd32];

assign local_temp_V_33_fu_1093_p3 = weights_V_TDATA[32'd33];

assign local_temp_V_34_fu_1101_p3 = weights_V_TDATA[32'd34];

assign local_temp_V_35_fu_1109_p3 = weights_V_TDATA[32'd35];

assign local_temp_V_36_fu_1189_p3 = weights_V_TDATA[32'd36];

assign local_temp_V_37_fu_1197_p3 = weights_V_TDATA[32'd37];

assign local_temp_V_38_fu_1205_p3 = weights_V_TDATA[32'd38];

assign local_temp_V_39_fu_1213_p3 = weights_V_TDATA[32'd39];

assign local_temp_V_3_fu_253_p3 = weights_V_TDATA[32'd3];

assign local_temp_V_4_fu_357_p3 = weights_V_TDATA[32'd4];

assign local_temp_V_5_fu_365_p3 = weights_V_TDATA[32'd5];

assign local_temp_V_6_fu_373_p3 = weights_V_TDATA[32'd6];

assign local_temp_V_7_fu_381_p3 = weights_V_TDATA[32'd7];

assign local_temp_V_8_fu_461_p3 = weights_V_TDATA[32'd8];

assign local_temp_V_9_fu_469_p3 = weights_V_TDATA[32'd9];

assign local_temp_V_fu_233_p1 = weights_V_TDATA[0:0];

assign out_V_TDATA = {{{{{{{{{{add_ln840_39_fu_1594_p2}, {add_ln840_35_fu_1576_p2}}, {add_ln840_31_fu_1558_p2}}, {add_ln840_27_fu_1540_p2}}, {add_ln840_23_fu_1522_p2}}, {add_ln840_19_fu_1504_p2}}, {add_ln840_15_fu_1486_p2}}, {add_ln840_11_fu_1468_p2}}, {add_ln840_7_fu_1450_p2}}, {add_ln840_3_fu_1432_p2}};

assign p_Result_1_fu_277_p3 = in0_V_TDATA[32'd1];

assign p_Result_2_fu_297_p3 = in0_V_TDATA[32'd2];

assign p_Result_3_fu_321_p3 = in0_V_TDATA[32'd3];

assign p_Result_s_fu_223_p1 = in0_V_TDATA[0:0];

assign select_ln272_1_fu_1357_p3 = ((icmp_ln272_reg_1754[0:0] == 1'b1) ? 8'd0 : add_i_i_i2_8_390_fu_168);

assign select_ln272_2_fu_1364_p3 = ((icmp_ln272_reg_1754[0:0] == 1'b1) ? 8'd0 : add_i_i_i2_7_388_fu_164);

assign select_ln272_3_fu_1371_p3 = ((icmp_ln272_reg_1754[0:0] == 1'b1) ? 8'd0 : add_i_i_i2_6_386_fu_160);

assign select_ln272_4_fu_1378_p3 = ((icmp_ln272_reg_1754[0:0] == 1'b1) ? 8'd0 : add_i_i_i2_5_384_fu_156);

assign select_ln272_5_fu_1385_p3 = ((icmp_ln272_reg_1754[0:0] == 1'b1) ? 8'd0 : add_i_i_i2_4_382_fu_152);

assign select_ln272_6_fu_1392_p3 = ((icmp_ln272_reg_1754[0:0] == 1'b1) ? 8'd0 : add_i_i_i2_3_380_fu_148);

assign select_ln272_7_fu_1399_p3 = ((icmp_ln272_reg_1754[0:0] == 1'b1) ? 8'd0 : add_i_i_i2_2_378_fu_144);

assign select_ln272_8_fu_1406_p3 = ((icmp_ln272_reg_1754[0:0] == 1'b1) ? 8'd0 : add_i_i_i2_1_376_fu_140);

assign select_ln272_9_fu_1413_p3 = ((icmp_ln272_reg_1754[0:0] == 1'b1) ? 8'd0 : add_i_i_i2_33974_fu_136);

assign select_ln272_fu_1350_p3 = ((icmp_ln272_reg_1754[0:0] == 1'b1) ? 8'd0 : add_i_i_i2_9_392_fu_172);

assign sf_1_fu_1293_p2 = (ap_sig_allocacmp_sf_load + 32'd1);

assign xor_ln1019_10_fu_405_p2 = (p_Result_1_fu_277_p3 ^ local_temp_V_5_fu_365_p3);

assign xor_ln1019_11_fu_411_p2 = (xor_ln1019_10_fu_405_p2 ^ 1'd1);

assign xor_ln1019_12_fu_417_p2 = (p_Result_2_fu_297_p3 ^ local_temp_V_6_fu_373_p3);

assign xor_ln1019_13_fu_423_p2 = (xor_ln1019_12_fu_417_p2 ^ 1'd1);

assign xor_ln1019_14_fu_433_p2 = (p_Result_3_fu_321_p3 ^ local_temp_V_7_fu_381_p3);

assign xor_ln1019_15_fu_439_p2 = (xor_ln1019_14_fu_433_p2 ^ 1'd1);

assign xor_ln1019_16_fu_493_p2 = (p_Result_s_fu_223_p1 ^ local_temp_V_8_fu_461_p3);

assign xor_ln1019_17_fu_499_p2 = (xor_ln1019_16_fu_493_p2 ^ 1'd1);

assign xor_ln1019_18_fu_509_p2 = (p_Result_1_fu_277_p3 ^ local_temp_V_9_fu_469_p3);

assign xor_ln1019_19_fu_515_p2 = (xor_ln1019_18_fu_509_p2 ^ 1'd1);

assign xor_ln1019_1_fu_267_p2 = (xor_ln1019_fu_261_p2 ^ 1'd1);

assign xor_ln1019_20_fu_521_p2 = (p_Result_2_fu_297_p3 ^ local_temp_V_10_fu_477_p3);

assign xor_ln1019_21_fu_527_p2 = (xor_ln1019_20_fu_521_p2 ^ 1'd1);

assign xor_ln1019_22_fu_537_p2 = (p_Result_3_fu_321_p3 ^ local_temp_V_11_fu_485_p3);

assign xor_ln1019_23_fu_543_p2 = (xor_ln1019_22_fu_537_p2 ^ 1'd1);

assign xor_ln1019_24_fu_597_p2 = (p_Result_s_fu_223_p1 ^ local_temp_V_12_fu_565_p3);

assign xor_ln1019_25_fu_603_p2 = (xor_ln1019_24_fu_597_p2 ^ 1'd1);

assign xor_ln1019_26_fu_613_p2 = (p_Result_1_fu_277_p3 ^ local_temp_V_13_fu_573_p3);

assign xor_ln1019_27_fu_619_p2 = (xor_ln1019_26_fu_613_p2 ^ 1'd1);

assign xor_ln1019_28_fu_625_p2 = (p_Result_2_fu_297_p3 ^ local_temp_V_14_fu_581_p3);

assign xor_ln1019_29_fu_631_p2 = (xor_ln1019_28_fu_625_p2 ^ 1'd1);

assign xor_ln1019_2_fu_285_p2 = (p_Result_1_fu_277_p3 ^ local_temp_V_1_fu_237_p3);

assign xor_ln1019_30_fu_641_p2 = (p_Result_3_fu_321_p3 ^ local_temp_V_15_fu_589_p3);

assign xor_ln1019_31_fu_647_p2 = (xor_ln1019_30_fu_641_p2 ^ 1'd1);

assign xor_ln1019_32_fu_701_p2 = (p_Result_s_fu_223_p1 ^ local_temp_V_16_fu_669_p3);

assign xor_ln1019_33_fu_707_p2 = (xor_ln1019_32_fu_701_p2 ^ 1'd1);

assign xor_ln1019_34_fu_717_p2 = (p_Result_1_fu_277_p3 ^ local_temp_V_17_fu_677_p3);

assign xor_ln1019_35_fu_723_p2 = (xor_ln1019_34_fu_717_p2 ^ 1'd1);

assign xor_ln1019_36_fu_729_p2 = (p_Result_2_fu_297_p3 ^ local_temp_V_18_fu_685_p3);

assign xor_ln1019_37_fu_735_p2 = (xor_ln1019_36_fu_729_p2 ^ 1'd1);

assign xor_ln1019_38_fu_745_p2 = (p_Result_3_fu_321_p3 ^ local_temp_V_19_fu_693_p3);

assign xor_ln1019_39_fu_751_p2 = (xor_ln1019_38_fu_745_p2 ^ 1'd1);

assign xor_ln1019_3_fu_291_p2 = (xor_ln1019_2_fu_285_p2 ^ 1'd1);

assign xor_ln1019_40_fu_805_p2 = (p_Result_s_fu_223_p1 ^ local_temp_V_20_fu_773_p3);

assign xor_ln1019_41_fu_811_p2 = (xor_ln1019_40_fu_805_p2 ^ 1'd1);

assign xor_ln1019_42_fu_821_p2 = (p_Result_1_fu_277_p3 ^ local_temp_V_21_fu_781_p3);

assign xor_ln1019_43_fu_827_p2 = (xor_ln1019_42_fu_821_p2 ^ 1'd1);

assign xor_ln1019_44_fu_833_p2 = (p_Result_2_fu_297_p3 ^ local_temp_V_22_fu_789_p3);

assign xor_ln1019_45_fu_839_p2 = (xor_ln1019_44_fu_833_p2 ^ 1'd1);

assign xor_ln1019_46_fu_849_p2 = (p_Result_3_fu_321_p3 ^ local_temp_V_23_fu_797_p3);

assign xor_ln1019_47_fu_855_p2 = (xor_ln1019_46_fu_849_p2 ^ 1'd1);

assign xor_ln1019_48_fu_909_p2 = (p_Result_s_fu_223_p1 ^ local_temp_V_24_fu_877_p3);

assign xor_ln1019_49_fu_915_p2 = (xor_ln1019_48_fu_909_p2 ^ 1'd1);

assign xor_ln1019_4_fu_305_p2 = (p_Result_2_fu_297_p3 ^ local_temp_V_2_fu_245_p3);

assign xor_ln1019_50_fu_925_p2 = (p_Result_1_fu_277_p3 ^ local_temp_V_25_fu_885_p3);

assign xor_ln1019_51_fu_931_p2 = (xor_ln1019_50_fu_925_p2 ^ 1'd1);

assign xor_ln1019_52_fu_937_p2 = (p_Result_2_fu_297_p3 ^ local_temp_V_26_fu_893_p3);

assign xor_ln1019_53_fu_943_p2 = (xor_ln1019_52_fu_937_p2 ^ 1'd1);

assign xor_ln1019_54_fu_953_p2 = (p_Result_3_fu_321_p3 ^ local_temp_V_27_fu_901_p3);

assign xor_ln1019_55_fu_959_p2 = (xor_ln1019_54_fu_953_p2 ^ 1'd1);

assign xor_ln1019_56_fu_1013_p2 = (p_Result_s_fu_223_p1 ^ local_temp_V_28_fu_981_p3);

assign xor_ln1019_57_fu_1019_p2 = (xor_ln1019_56_fu_1013_p2 ^ 1'd1);

assign xor_ln1019_58_fu_1029_p2 = (p_Result_1_fu_277_p3 ^ local_temp_V_29_fu_989_p3);

assign xor_ln1019_59_fu_1035_p2 = (xor_ln1019_58_fu_1029_p2 ^ 1'd1);

assign xor_ln1019_5_fu_311_p2 = (xor_ln1019_4_fu_305_p2 ^ 1'd1);

assign xor_ln1019_60_fu_1041_p2 = (p_Result_2_fu_297_p3 ^ local_temp_V_30_fu_997_p3);

assign xor_ln1019_61_fu_1047_p2 = (xor_ln1019_60_fu_1041_p2 ^ 1'd1);

assign xor_ln1019_62_fu_1057_p2 = (p_Result_3_fu_321_p3 ^ local_temp_V_31_fu_1005_p3);

assign xor_ln1019_63_fu_1063_p2 = (xor_ln1019_62_fu_1057_p2 ^ 1'd1);

assign xor_ln1019_64_fu_1117_p2 = (p_Result_s_fu_223_p1 ^ local_temp_V_32_fu_1085_p3);

assign xor_ln1019_65_fu_1123_p2 = (xor_ln1019_64_fu_1117_p2 ^ 1'd1);

assign xor_ln1019_66_fu_1133_p2 = (p_Result_1_fu_277_p3 ^ local_temp_V_33_fu_1093_p3);

assign xor_ln1019_67_fu_1139_p2 = (xor_ln1019_66_fu_1133_p2 ^ 1'd1);

assign xor_ln1019_68_fu_1145_p2 = (p_Result_2_fu_297_p3 ^ local_temp_V_34_fu_1101_p3);

assign xor_ln1019_69_fu_1151_p2 = (xor_ln1019_68_fu_1145_p2 ^ 1'd1);

assign xor_ln1019_6_fu_329_p2 = (p_Result_3_fu_321_p3 ^ local_temp_V_3_fu_253_p3);

assign xor_ln1019_70_fu_1161_p2 = (p_Result_3_fu_321_p3 ^ local_temp_V_35_fu_1109_p3);

assign xor_ln1019_71_fu_1167_p2 = (xor_ln1019_70_fu_1161_p2 ^ 1'd1);

assign xor_ln1019_72_fu_1221_p2 = (p_Result_s_fu_223_p1 ^ local_temp_V_36_fu_1189_p3);

assign xor_ln1019_73_fu_1227_p2 = (xor_ln1019_72_fu_1221_p2 ^ 1'd1);

assign xor_ln1019_74_fu_1237_p2 = (p_Result_1_fu_277_p3 ^ local_temp_V_37_fu_1197_p3);

assign xor_ln1019_75_fu_1243_p2 = (xor_ln1019_74_fu_1237_p2 ^ 1'd1);

assign xor_ln1019_76_fu_1249_p2 = (p_Result_2_fu_297_p3 ^ local_temp_V_38_fu_1205_p3);

assign xor_ln1019_77_fu_1255_p2 = (xor_ln1019_76_fu_1249_p2 ^ 1'd1);

assign xor_ln1019_78_fu_1265_p2 = (p_Result_3_fu_321_p3 ^ local_temp_V_39_fu_1213_p3);

assign xor_ln1019_79_fu_1271_p2 = (xor_ln1019_78_fu_1265_p2 ^ 1'd1);

assign xor_ln1019_7_fu_335_p2 = (xor_ln1019_6_fu_329_p2 ^ 1'd1);

assign xor_ln1019_8_fu_389_p2 = (p_Result_s_fu_223_p1 ^ local_temp_V_4_fu_357_p3);

assign xor_ln1019_9_fu_395_p2 = (xor_ln1019_8_fu_389_p2 ^ 1'd1);

assign xor_ln1019_fu_261_p2 = (p_Result_s_fu_223_p1 ^ local_temp_V_fu_233_p1);

assign zext_ln1019_10_fu_921_p1 = xor_ln1019_49_fu_915_p2;

assign zext_ln1019_11_fu_949_p1 = xor_ln1019_53_fu_943_p2;

assign zext_ln1019_12_fu_1025_p1 = xor_ln1019_57_fu_1019_p2;

assign zext_ln1019_13_fu_1053_p1 = xor_ln1019_61_fu_1047_p2;

assign zext_ln1019_14_fu_1129_p1 = xor_ln1019_65_fu_1123_p2;

assign zext_ln1019_15_fu_1157_p1 = xor_ln1019_69_fu_1151_p2;

assign zext_ln1019_16_fu_1233_p1 = xor_ln1019_73_fu_1227_p2;

assign zext_ln1019_17_fu_1261_p1 = xor_ln1019_77_fu_1255_p2;

assign zext_ln1019_1_fu_429_p1 = xor_ln1019_13_fu_423_p2;

assign zext_ln1019_2_fu_505_p1 = xor_ln1019_17_fu_499_p2;

assign zext_ln1019_3_fu_533_p1 = xor_ln1019_21_fu_527_p2;

assign zext_ln1019_4_fu_609_p1 = xor_ln1019_25_fu_603_p2;

assign zext_ln1019_5_fu_637_p1 = xor_ln1019_29_fu_631_p2;

assign zext_ln1019_6_fu_713_p1 = xor_ln1019_33_fu_707_p2;

assign zext_ln1019_7_fu_741_p1 = xor_ln1019_37_fu_735_p2;

assign zext_ln1019_8_fu_817_p1 = xor_ln1019_41_fu_811_p2;

assign zext_ln1019_9_fu_845_p1 = xor_ln1019_45_fu_839_p2;

assign zext_ln1019_fu_401_p1 = xor_ln1019_9_fu_395_p2;

assign zext_ln780_1_fu_317_p1 = xor_ln1019_5_fu_311_p2;

assign zext_ln780_fu_273_p1 = xor_ln1019_1_fu_267_p2;

assign zext_ln840_10_fu_653_p1 = xor_ln1019_31_fu_647_p2;

assign zext_ln840_11_fu_1477_p1 = add_ln840_14_reg_1803;

assign zext_ln840_12_fu_1492_p1 = xor_ln1019_35_reg_1808;

assign zext_ln840_13_fu_757_p1 = xor_ln1019_39_fu_751_p2;

assign zext_ln840_14_fu_1495_p1 = add_ln840_18_reg_1813;

assign zext_ln840_15_fu_1510_p1 = xor_ln1019_43_reg_1818;

assign zext_ln840_16_fu_861_p1 = xor_ln1019_47_fu_855_p2;

assign zext_ln840_17_fu_1513_p1 = add_ln840_22_reg_1823;

assign zext_ln840_18_fu_1528_p1 = xor_ln1019_51_reg_1828;

assign zext_ln840_19_fu_965_p1 = xor_ln1019_55_fu_959_p2;

assign zext_ln840_1_fu_341_p1 = xor_ln1019_7_fu_335_p2;

assign zext_ln840_20_fu_1531_p1 = add_ln840_26_reg_1833;

assign zext_ln840_21_fu_1546_p1 = xor_ln1019_59_reg_1838;

assign zext_ln840_22_fu_1069_p1 = xor_ln1019_63_fu_1063_p2;

assign zext_ln840_23_fu_1549_p1 = add_ln840_30_reg_1843;

assign zext_ln840_24_fu_1564_p1 = xor_ln1019_67_reg_1848;

assign zext_ln840_25_fu_1173_p1 = xor_ln1019_71_fu_1167_p2;

assign zext_ln840_26_fu_1567_p1 = add_ln840_34_reg_1853;

assign zext_ln840_27_fu_1582_p1 = xor_ln1019_75_reg_1858;

assign zext_ln840_28_fu_1277_p1 = xor_ln1019_79_fu_1271_p2;

assign zext_ln840_29_fu_1585_p1 = add_ln840_38_reg_1863;

assign zext_ln840_2_fu_1423_p1 = add_ln840_2_reg_1773;

assign zext_ln840_3_fu_1438_p1 = xor_ln1019_11_reg_1778;

assign zext_ln840_4_fu_445_p1 = xor_ln1019_15_fu_439_p2;

assign zext_ln840_5_fu_1441_p1 = add_ln840_6_reg_1783;

assign zext_ln840_6_fu_1456_p1 = xor_ln1019_19_reg_1788;

assign zext_ln840_7_fu_549_p1 = xor_ln1019_23_fu_543_p2;

assign zext_ln840_8_fu_1459_p1 = add_ln840_10_reg_1793;

assign zext_ln840_9_fu_1474_p1 = xor_ln1019_27_reg_1798;

assign zext_ln840_fu_1420_p1 = xor_ln1019_3_reg_1768;

endmodule //MatrixVectorActivation_3_Matrix_Vector_Activate_Stream_Batch
