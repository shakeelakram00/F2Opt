// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
// Version: 2022.2.2
// Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MatrixVectorActivation_4_Matrix_Vector_Activate_Stream_Batch (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in0_V_TVALID,
        weights_V_TVALID,
        out_V_TREADY,
        in0_V_TDATA,
        in0_V_TREADY,
        out_V_TDATA,
        out_V_TVALID,
        weights_V_TDATA,
        weights_V_TREADY
);

parameter    ap_ST_iter0_fsm_state1 = 1'd1;
parameter    ap_ST_iter1_fsm_state2 = 2'd2;
parameter    ap_ST_iter1_fsm_state0 = 2'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   in0_V_TVALID;
input   weights_V_TVALID;
input   out_V_TREADY;
input  [7:0] in0_V_TDATA;
output   in0_V_TREADY;
output  [7:0] out_V_TDATA;
output   out_V_TVALID;
input  [15:0] weights_V_TDATA;
output   weights_V_TREADY;

reg ap_idle;
reg in0_V_TREADY;
reg out_V_TVALID;
reg weights_V_TREADY;

reg   [0:0] ap_CS_iter0_fsm;
wire    ap_CS_iter0_fsm_state1;
reg   [1:0] ap_CS_iter1_fsm;
wire    ap_CS_iter1_fsm_state0;
wire   [0:0] icmp_ln249_fu_246_p2;
wire   [0:0] icmp_ln253_fu_258_p2;
reg    ap_predicate_op53_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln249_reg_1335;
wire   [0:0] icmp_ln249_reg_1335_pp0_iter0_reg;
reg   [0:0] icmp_ln290_reg_1399;
reg    ap_predicate_op216_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state2_io;
wire    ap_CS_iter1_fsm_state2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    in0_V_TDATA_blk_n;
reg    out_V_TDATA_blk_n;
reg    weights_V_TDATA_blk_n;
wire   [2:0] trunc_ln257_fu_327_p1;
wire   [0:0] icmp_ln272_fu_375_p2;
reg   [0:0] icmp_ln272_reg_1347;
wire   [1:0] add_ln840_fu_433_p2;
reg   [1:0] add_ln840_reg_1359;
wire   [1:0] add_ln840_2_fu_487_p2;
reg   [1:0] add_ln840_2_reg_1364;
wire   [1:0] add_ln840_4_fu_541_p2;
reg   [1:0] add_ln840_4_reg_1369;
wire   [1:0] add_ln840_6_fu_595_p2;
reg   [1:0] add_ln840_6_reg_1374;
wire   [1:0] add_ln840_8_fu_649_p2;
reg   [1:0] add_ln840_8_reg_1379;
wire   [1:0] add_ln840_10_fu_703_p2;
reg   [1:0] add_ln840_10_reg_1384;
wire   [1:0] add_ln840_12_fu_757_p2;
reg   [1:0] add_ln840_12_reg_1389;
wire   [1:0] add_ln840_14_fu_811_p2;
reg   [1:0] add_ln840_14_reg_1394;
wire   [0:0] icmp_ln290_fu_823_p2;
wire   [0:0] trunc_ln218_fu_834_p1;
reg   [0:0] trunc_ln218_reg_1403;
reg   [1:0] ap_phi_mux_inElem_1_phi_fu_202_p18;
wire   [1:0] inElem_fu_315_p1;
wire   [1:0] ap_phi_reg_pp0_iter0_inElem_1_reg_199;
wire   [1:0] tmp_fu_292_p10;
reg   [31:0] sf_fu_104;
wire   [31:0] sf_2_fu_817_p2;
wire    ap_loop_init;
reg   [31:0] ap_sig_allocacmp_sf_1;
reg   [4:0] i_fu_108;
wire   [4:0] i_2_fu_252_p2;
reg   [4:0] ap_sig_allocacmp_i_1;
reg   [5:0] add_i_i_i3_12754_fu_112;
wire   [5:0] add_ln840_1_fu_956_p2;
reg   [5:0] add_i_i_i3_1_156_fu_116;
wire   [5:0] add_ln840_3_fu_965_p2;
reg   [5:0] add_i_i_i3_2_158_fu_120;
wire   [5:0] add_ln840_5_fu_974_p2;
reg   [5:0] add_i_i_i3_3_160_fu_124;
wire   [5:0] add_ln840_7_fu_983_p2;
reg   [5:0] add_i_i_i3_4_162_fu_128;
wire   [5:0] add_ln840_9_fu_992_p2;
reg   [5:0] add_i_i_i3_5_164_fu_132;
wire   [5:0] add_ln840_11_fu_1001_p2;
reg   [5:0] add_i_i_i3_6_166_fu_136;
wire   [5:0] add_ln840_13_fu_1010_p2;
reg   [5:0] add_i_i_i3_7_168_fu_140;
wire   [5:0] add_ln840_15_fu_1019_p2;
reg   [1:0] inputBuf_V_fu_144;
reg   [1:0] inputBuf_V_1_fu_148;
reg   [1:0] inputBuf_V_2_fu_152;
reg   [1:0] inputBuf_V_3_fu_156;
reg   [1:0] inputBuf_V_4_fu_160;
reg   [1:0] inputBuf_V_5_fu_164;
reg   [1:0] inputBuf_V_6_fu_168;
reg   [1:0] inputBuf_V_7_fu_172;
reg   [31:0] nf_1_fu_176;
wire   [31:0] nf_3_fu_850_p3;
reg   [31:0] ap_sig_allocacmp_nf_2;
wire   [2:0] tmp_fu_292_p9;
wire   [0:0] local_temp_V_fu_381_p1;
wire   [0:0] xor_ln1019_fu_393_p2;
wire   [0:0] p_Result_s_fu_371_p1;
wire   [0:0] xor_ln1019_1_fu_399_p2;
wire   [0:0] p_Result_1_fu_409_p3;
wire   [0:0] local_temp_V_1_fu_385_p3;
wire   [0:0] xor_ln1019_2_fu_417_p2;
wire   [0:0] xor_ln1019_3_fu_423_p2;
wire   [1:0] zext_ln780_fu_405_p1;
wire   [1:0] zext_ln840_fu_429_p1;
wire   [0:0] local_temp_V_2_fu_439_p3;
wire   [0:0] xor_ln1019_4_fu_455_p2;
wire   [0:0] xor_ln1019_5_fu_461_p2;
wire   [0:0] local_temp_V_3_fu_447_p3;
wire   [0:0] xor_ln1019_6_fu_471_p2;
wire   [0:0] xor_ln1019_7_fu_477_p2;
wire   [1:0] zext_ln1019_fu_467_p1;
wire   [1:0] zext_ln840_2_fu_483_p1;
wire   [0:0] local_temp_V_4_fu_493_p3;
wire   [0:0] xor_ln1019_8_fu_509_p2;
wire   [0:0] xor_ln1019_9_fu_515_p2;
wire   [0:0] local_temp_V_5_fu_501_p3;
wire   [0:0] xor_ln1019_10_fu_525_p2;
wire   [0:0] xor_ln1019_11_fu_531_p2;
wire   [1:0] zext_ln1019_1_fu_521_p1;
wire   [1:0] zext_ln840_4_fu_537_p1;
wire   [0:0] local_temp_V_6_fu_547_p3;
wire   [0:0] xor_ln1019_12_fu_563_p2;
wire   [0:0] xor_ln1019_13_fu_569_p2;
wire   [0:0] local_temp_V_7_fu_555_p3;
wire   [0:0] xor_ln1019_14_fu_579_p2;
wire   [0:0] xor_ln1019_15_fu_585_p2;
wire   [1:0] zext_ln1019_2_fu_575_p1;
wire   [1:0] zext_ln840_6_fu_591_p1;
wire   [0:0] local_temp_V_8_fu_601_p3;
wire   [0:0] xor_ln1019_16_fu_617_p2;
wire   [0:0] xor_ln1019_17_fu_623_p2;
wire   [0:0] local_temp_V_9_fu_609_p3;
wire   [0:0] xor_ln1019_18_fu_633_p2;
wire   [0:0] xor_ln1019_19_fu_639_p2;
wire   [1:0] zext_ln1019_3_fu_629_p1;
wire   [1:0] zext_ln840_8_fu_645_p1;
wire   [0:0] local_temp_V_10_fu_655_p3;
wire   [0:0] xor_ln1019_20_fu_671_p2;
wire   [0:0] xor_ln1019_21_fu_677_p2;
wire   [0:0] local_temp_V_11_fu_663_p3;
wire   [0:0] xor_ln1019_22_fu_687_p2;
wire   [0:0] xor_ln1019_23_fu_693_p2;
wire   [1:0] zext_ln1019_4_fu_683_p1;
wire   [1:0] zext_ln840_10_fu_699_p1;
wire   [0:0] local_temp_V_12_fu_709_p3;
wire   [0:0] xor_ln1019_24_fu_725_p2;
wire   [0:0] xor_ln1019_25_fu_731_p2;
wire   [0:0] local_temp_V_13_fu_717_p3;
wire   [0:0] xor_ln1019_26_fu_741_p2;
wire   [0:0] xor_ln1019_27_fu_747_p2;
wire   [1:0] zext_ln1019_5_fu_737_p1;
wire   [1:0] zext_ln840_12_fu_753_p1;
wire   [0:0] local_temp_V_14_fu_763_p3;
wire   [0:0] xor_ln1019_28_fu_779_p2;
wire   [0:0] xor_ln1019_29_fu_785_p2;
wire   [0:0] local_temp_V_15_fu_771_p3;
wire   [0:0] xor_ln1019_30_fu_795_p2;
wire   [0:0] xor_ln1019_31_fu_801_p2;
wire   [1:0] zext_ln1019_6_fu_791_p1;
wire   [1:0] zext_ln840_14_fu_807_p1;
wire   [31:0] nf_fu_838_p2;
wire   [0:0] icmp_ln302_fu_844_p2;
wire   [5:0] zext_ln840_1_fu_953_p1;
wire   [5:0] select_ln272_7_fu_946_p3;
wire   [5:0] zext_ln840_3_fu_962_p1;
wire   [5:0] select_ln272_6_fu_939_p3;
wire   [5:0] zext_ln840_5_fu_971_p1;
wire   [5:0] select_ln272_5_fu_932_p3;
wire   [5:0] zext_ln840_7_fu_980_p1;
wire   [5:0] select_ln272_4_fu_925_p3;
wire   [5:0] zext_ln840_9_fu_989_p1;
wire   [5:0] select_ln272_3_fu_918_p3;
wire   [5:0] zext_ln840_11_fu_998_p1;
wire   [5:0] select_ln272_2_fu_911_p3;
wire   [5:0] zext_ln840_13_fu_1007_p1;
wire   [5:0] select_ln272_1_fu_904_p3;
wire   [5:0] zext_ln840_15_fu_1016_p1;
wire   [5:0] select_ln272_fu_897_p3;
wire   [5:0] select_ln1039_fu_1025_p3;
wire   [0:0] icmp_ln1039_fu_1032_p2;
wire   [5:0] select_ln1039_1_fu_1044_p3;
wire   [0:0] icmp_ln1039_1_fu_1051_p2;
wire   [0:0] icmp_ln1039_2_fu_1063_p2;
wire   [5:0] select_ln1039_2_fu_1075_p3;
wire   [0:0] icmp_ln1039_3_fu_1082_p2;
wire   [5:0] select_ln1039_3_fu_1094_p3;
wire   [0:0] icmp_ln1039_4_fu_1101_p2;
wire   [0:0] icmp_ln1039_5_fu_1113_p2;
wire   [5:0] select_ln1039_4_fu_1125_p3;
wire   [0:0] icmp_ln1039_6_fu_1132_p2;
wire   [0:0] icmp_ln1039_7_fu_1144_p2;
wire   [0:0] result_V_7_fu_1150_p2;
wire   [0:0] result_V_6_fu_1138_p2;
wire   [0:0] result_V_5_fu_1119_p2;
wire   [0:0] result_V_4_fu_1107_p2;
wire   [0:0] result_V_3_fu_1088_p2;
wire   [0:0] result_V_2_fu_1069_p2;
wire   [0:0] result_V_1_fu_1057_p2;
wire   [0:0] result_V_fu_1038_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_iter0_fsm;
reg   [1:0] ap_NS_iter1_fsm;
reg    ap_ST_iter0_fsm_state1_blk;
reg    ap_ST_iter1_fsm_state2_blk;
wire    ap_start_int;
reg    ap_condition_917;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_iter0_fsm = 1'd1;
#0 ap_CS_iter1_fsm = 2'd1;
#0 ap_done_reg = 1'b0;
end

MatrixVectorActivation_4_mux_83_2_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 2 ),
    .din3_WIDTH( 2 ),
    .din4_WIDTH( 2 ),
    .din5_WIDTH( 2 ),
    .din6_WIDTH( 2 ),
    .din7_WIDTH( 2 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
mux_83_2_1_1_U1(
    .din0(inputBuf_V_fu_144),
    .din1(inputBuf_V_1_fu_148),
    .din2(inputBuf_V_2_fu_152),
    .din3(inputBuf_V_3_fu_156),
    .din4(inputBuf_V_4_fu_160),
    .din5(inputBuf_V_5_fu_164),
    .din6(inputBuf_V_6_fu_168),
    .din7(inputBuf_V_7_fu_172),
    .din8(tmp_fu_292_p9),
    .dout(tmp_fu_292_p10)
);

MatrixVectorActivation_4_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((1'b1 == ap_block_state2_io) | ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0))) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state2_io) | ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0))) & (ap_loop_exit_ready == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_246_p2 == 1'd0)) | ((ap_predicate_op53_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_917)) begin
        if ((icmp_ln249_fu_246_p2 == 1'd0)) begin
            i_fu_108 <= i_2_fu_252_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_108 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_917)) begin
        if (((icmp_ln249_fu_246_p2 == 1'd0) & (icmp_ln290_fu_823_p2 == 1'd1))) begin
            nf_1_fu_176 <= nf_3_fu_850_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            nf_1_fu_176 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_917)) begin
        if (((icmp_ln249_fu_246_p2 == 1'd0) & (icmp_ln290_fu_823_p2 == 1'd1))) begin
            sf_fu_104 <= 32'd0;
        end else if (((icmp_ln249_fu_246_p2 == 1'd0) & (icmp_ln290_fu_823_p2 == 1'd0))) begin
            sf_fu_104 <= sf_2_fu_817_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            sf_fu_104 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state2_io) | ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0))) & (icmp_ln249_reg_1335 == 1'd0) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        add_i_i_i3_12754_fu_112 <= add_ln840_1_fu_956_p2;
        add_i_i_i3_1_156_fu_116 <= add_ln840_3_fu_965_p2;
        add_i_i_i3_2_158_fu_120 <= add_ln840_5_fu_974_p2;
        add_i_i_i3_3_160_fu_124 <= add_ln840_7_fu_983_p2;
        add_i_i_i3_4_162_fu_128 <= add_ln840_9_fu_992_p2;
        add_i_i_i3_5_164_fu_132 <= add_ln840_11_fu_1001_p2;
        add_i_i_i3_6_166_fu_136 <= add_ln840_13_fu_1010_p2;
        add_i_i_i3_7_168_fu_140 <= add_ln840_15_fu_1019_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_246_p2 == 1'd0)) | ((ap_predicate_op53_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln249_fu_246_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        add_ln840_10_reg_1384 <= add_ln840_10_fu_703_p2;
        add_ln840_12_reg_1389 <= add_ln840_12_fu_757_p2;
        add_ln840_14_reg_1394 <= add_ln840_14_fu_811_p2;
        add_ln840_2_reg_1364 <= add_ln840_2_fu_487_p2;
        add_ln840_4_reg_1369 <= add_ln840_4_fu_541_p2;
        add_ln840_6_reg_1374 <= add_ln840_6_fu_595_p2;
        add_ln840_8_reg_1379 <= add_ln840_8_fu_649_p2;
        add_ln840_reg_1359 <= add_ln840_fu_433_p2;
        icmp_ln272_reg_1347 <= icmp_ln272_fu_375_p2;
        icmp_ln290_reg_1399 <= icmp_ln290_fu_823_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_246_p2 == 1'd0)) | ((ap_predicate_op53_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        icmp_ln249_reg_1335 <= icmp_ln249_fu_246_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_246_p2 == 1'd0)) | ((ap_predicate_op53_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln253_fu_258_p2 == 1'd1) & (icmp_ln249_fu_246_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (trunc_ln257_fu_327_p1 == 3'd1))) begin
        inputBuf_V_1_fu_148 <= inElem_fu_315_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_246_p2 == 1'd0)) | ((ap_predicate_op53_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln253_fu_258_p2 == 1'd1) & (icmp_ln249_fu_246_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (trunc_ln257_fu_327_p1 == 3'd2))) begin
        inputBuf_V_2_fu_152 <= inElem_fu_315_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_246_p2 == 1'd0)) | ((ap_predicate_op53_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln253_fu_258_p2 == 1'd1) & (icmp_ln249_fu_246_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (trunc_ln257_fu_327_p1 == 3'd3))) begin
        inputBuf_V_3_fu_156 <= inElem_fu_315_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_246_p2 == 1'd0)) | ((ap_predicate_op53_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln253_fu_258_p2 == 1'd1) & (icmp_ln249_fu_246_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (trunc_ln257_fu_327_p1 == 3'd4))) begin
        inputBuf_V_4_fu_160 <= inElem_fu_315_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_246_p2 == 1'd0)) | ((ap_predicate_op53_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln253_fu_258_p2 == 1'd1) & (icmp_ln249_fu_246_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (trunc_ln257_fu_327_p1 == 3'd5))) begin
        inputBuf_V_5_fu_164 <= inElem_fu_315_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_246_p2 == 1'd0)) | ((ap_predicate_op53_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln253_fu_258_p2 == 1'd1) & (icmp_ln249_fu_246_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (trunc_ln257_fu_327_p1 == 3'd6))) begin
        inputBuf_V_6_fu_168 <= inElem_fu_315_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_246_p2 == 1'd0)) | ((ap_predicate_op53_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln253_fu_258_p2 == 1'd1) & (icmp_ln249_fu_246_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (trunc_ln257_fu_327_p1 == 3'd7))) begin
        inputBuf_V_7_fu_172 <= inElem_fu_315_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_246_p2 == 1'd0)) | ((ap_predicate_op53_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln253_fu_258_p2 == 1'd1) & (icmp_ln249_fu_246_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (trunc_ln257_fu_327_p1 == 3'd0))) begin
        inputBuf_V_fu_144 <= inElem_fu_315_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_246_p2 == 1'd0)) | ((ap_predicate_op53_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln249_fu_246_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln290_fu_823_p2 == 1'd1))) begin
        trunc_ln218_reg_1403 <= trunc_ln218_fu_834_p1;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_246_p2 == 1'd0)) | ((ap_predicate_op53_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)))) begin
        ap_ST_iter0_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_iter0_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_block_state2_io) | ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) begin
        ap_ST_iter1_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_iter1_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_246_p2 == 1'd0)) | ((ap_predicate_op53_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln249_fu_246_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state2_io) | ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0))) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln253_fu_258_p2 == 1'd0) & (icmp_ln249_fu_246_p2 == 1'd0))) begin
        ap_phi_mux_inElem_1_phi_fu_202_p18 = tmp_fu_292_p10;
    end else if ((((icmp_ln253_fu_258_p2 == 1'd1) & (icmp_ln249_fu_246_p2 == 1'd0) & (trunc_ln257_fu_327_p1 == 3'd6)) | ((icmp_ln253_fu_258_p2 == 1'd1) & (icmp_ln249_fu_246_p2 == 1'd0) & (trunc_ln257_fu_327_p1 == 3'd0)) | ((icmp_ln253_fu_258_p2 == 1'd1) & (icmp_ln249_fu_246_p2 == 1'd0) & (trunc_ln257_fu_327_p1 == 3'd1)) | ((icmp_ln253_fu_258_p2 == 1'd1) & (icmp_ln249_fu_246_p2 == 1'd0) & (trunc_ln257_fu_327_p1 == 3'd2)) | ((icmp_ln253_fu_258_p2 == 1'd1) & (icmp_ln249_fu_246_p2 == 1'd0) & (trunc_ln257_fu_327_p1 == 3'd3)) | ((icmp_ln253_fu_258_p2 == 1'd1) & (icmp_ln249_fu_246_p2 == 1'd0) & (trunc_ln257_fu_327_p1 == 3'd4)) | ((icmp_ln253_fu_258_p2 == 1'd1) & (icmp_ln249_fu_246_p2 == 1'd0) & (trunc_ln257_fu_327_p1 == 3'd5)) | ((icmp_ln253_fu_258_p2 == 1'd1) & (icmp_ln249_fu_246_p2 == 1'd0) & (trunc_ln257_fu_327_p1 == 3'd7)))) begin
        ap_phi_mux_inElem_1_phi_fu_202_p18 = inElem_fu_315_p1;
    end else begin
        ap_phi_mux_inElem_1_phi_fu_202_p18 = ap_phi_reg_pp0_iter0_inElem_1_reg_199;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_246_p2 == 1'd0)) | ((ap_predicate_op53_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_1 = 5'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_108;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_nf_2 = 32'd0;
    end else begin
        ap_sig_allocacmp_nf_2 = nf_1_fu_176;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_sf_1 = 32'd0;
    end else begin
        ap_sig_allocacmp_sf_1 = sf_fu_104;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (ap_predicate_op53_read_state1 == 1'b1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        in0_V_TDATA_blk_n = in0_V_TVALID;
    end else begin
        in0_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_246_p2 == 1'd0)) | ((ap_predicate_op53_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (ap_predicate_op53_read_state1 == 1'b1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        in0_V_TREADY = 1'b1;
    end else begin
        in0_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op216_write_state2 == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        out_V_TDATA_blk_n = out_V_TREADY;
    end else begin
        out_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state2_io) | ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0))) & (ap_predicate_op216_write_state2 == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        out_V_TVALID = 1'b1;
    end else begin
        out_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln249_fu_246_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        weights_V_TDATA_blk_n = weights_V_TVALID;
    end else begin
        weights_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_246_p2 == 1'd0)) | ((ap_predicate_op53_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln249_fu_246_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        weights_V_TREADY = 1'b1;
    end else begin
        weights_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state2 : begin
            if ((~((1'b1 == ap_block_state2_io) | ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0))) & ((1'b0 == ap_CS_iter0_fsm_state1) | ((1'b1 == ap_CS_iter0_fsm_state1) & ((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_246_p2 == 1'd0)) | ((ap_predicate_op53_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))))))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else if (((~((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_246_p2 == 1'd0)) | ((ap_predicate_op53_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & ~((1'b1 == ap_block_state2_io) | ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b1 == ap_block_state2_io) | ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0))) & (icmp_ln249_reg_1335_pp0_iter0_reg == 1'd1) & (1'b1 == ap_CS_iter1_fsm_state2)))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_246_p2 == 1'd0)) | ((ap_predicate_op53_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

assign add_ln840_10_fu_703_p2 = (zext_ln1019_4_fu_683_p1 + zext_ln840_10_fu_699_p1);

assign add_ln840_11_fu_1001_p2 = (zext_ln840_11_fu_998_p1 + select_ln272_2_fu_911_p3);

assign add_ln840_12_fu_757_p2 = (zext_ln1019_5_fu_737_p1 + zext_ln840_12_fu_753_p1);

assign add_ln840_13_fu_1010_p2 = (zext_ln840_13_fu_1007_p1 + select_ln272_1_fu_904_p3);

assign add_ln840_14_fu_811_p2 = (zext_ln1019_6_fu_791_p1 + zext_ln840_14_fu_807_p1);

assign add_ln840_15_fu_1019_p2 = (zext_ln840_15_fu_1016_p1 + select_ln272_fu_897_p3);

assign add_ln840_1_fu_956_p2 = (zext_ln840_1_fu_953_p1 + select_ln272_7_fu_946_p3);

assign add_ln840_2_fu_487_p2 = (zext_ln1019_fu_467_p1 + zext_ln840_2_fu_483_p1);

assign add_ln840_3_fu_965_p2 = (zext_ln840_3_fu_962_p1 + select_ln272_6_fu_939_p3);

assign add_ln840_4_fu_541_p2 = (zext_ln1019_1_fu_521_p1 + zext_ln840_4_fu_537_p1);

assign add_ln840_5_fu_974_p2 = (zext_ln840_5_fu_971_p1 + select_ln272_5_fu_932_p3);

assign add_ln840_6_fu_595_p2 = (zext_ln1019_2_fu_575_p1 + zext_ln840_6_fu_591_p1);

assign add_ln840_7_fu_983_p2 = (zext_ln840_7_fu_980_p1 + select_ln272_4_fu_925_p3);

assign add_ln840_8_fu_649_p2 = (zext_ln1019_3_fu_629_p1 + zext_ln840_8_fu_645_p1);

assign add_ln840_9_fu_992_p2 = (zext_ln840_9_fu_989_p1 + select_ln272_3_fu_918_p3);

assign add_ln840_fu_433_p2 = (zext_ln780_fu_405_p1 + zext_ln840_fu_429_p1);

assign ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm[32'd0];

assign ap_CS_iter1_fsm_state0 = ap_CS_iter1_fsm[32'd0];

assign ap_CS_iter1_fsm_state2 = ap_CS_iter1_fsm[32'd1];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_246_p2 == 1'd0)) | ((ap_predicate_op53_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state2_io = ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0));
end

always @ (*) begin
    ap_condition_917 = (~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op216_write_state2 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_246_p2 == 1'd0)) | ((ap_predicate_op53_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_inElem_1_reg_199 = 'bx;

always @ (*) begin
    ap_predicate_op216_write_state2 = ((icmp_ln290_reg_1399 == 1'd1) & (icmp_ln249_reg_1335 == 1'd0));
end

always @ (*) begin
    ap_predicate_op53_read_state1 = ((icmp_ln253_fu_258_p2 == 1'd1) & (icmp_ln249_fu_246_p2 == 1'd0));
end

assign i_2_fu_252_p2 = (ap_sig_allocacmp_i_1 + 5'd1);

assign icmp_ln1039_1_fu_1051_p2 = (($signed(add_ln840_3_fu_965_p2) < $signed(select_ln1039_1_fu_1044_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1039_2_fu_1063_p2 = (($signed(add_ln840_5_fu_974_p2) < $signed(select_ln1039_1_fu_1044_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1039_3_fu_1082_p2 = (($signed(add_ln840_7_fu_983_p2) < $signed(select_ln1039_2_fu_1075_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1039_4_fu_1101_p2 = (($signed(add_ln840_9_fu_992_p2) < $signed(select_ln1039_3_fu_1094_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1039_5_fu_1113_p2 = (($signed(add_ln840_11_fu_1001_p2) < $signed(select_ln1039_3_fu_1094_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1039_6_fu_1132_p2 = (($signed(add_ln840_13_fu_1010_p2) < $signed(select_ln1039_4_fu_1125_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1039_7_fu_1144_p2 = (($signed(add_ln840_15_fu_1019_p2) < $signed(select_ln1039_2_fu_1075_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1039_fu_1032_p2 = (($signed(add_ln840_1_fu_956_p2) < $signed(select_ln1039_fu_1025_p3)) ? 1'b1 : 1'b0);

assign icmp_ln249_fu_246_p2 = ((ap_sig_allocacmp_i_1 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln249_reg_1335_pp0_iter0_reg = icmp_ln249_reg_1335;

assign icmp_ln253_fu_258_p2 = ((ap_sig_allocacmp_nf_2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln272_fu_375_p2 = ((ap_sig_allocacmp_sf_1 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln290_fu_823_p2 = ((sf_2_fu_817_p2 == 32'd8) ? 1'b1 : 1'b0);

assign icmp_ln302_fu_844_p2 = ((nf_fu_838_p2 == 32'd2) ? 1'b1 : 1'b0);

assign inElem_fu_315_p1 = in0_V_TDATA[1:0];

assign local_temp_V_10_fu_655_p3 = weights_V_TDATA[32'd10];

assign local_temp_V_11_fu_663_p3 = weights_V_TDATA[32'd11];

assign local_temp_V_12_fu_709_p3 = weights_V_TDATA[32'd12];

assign local_temp_V_13_fu_717_p3 = weights_V_TDATA[32'd13];

assign local_temp_V_14_fu_763_p3 = weights_V_TDATA[32'd14];

assign local_temp_V_15_fu_771_p3 = weights_V_TDATA[32'd15];

assign local_temp_V_1_fu_385_p3 = weights_V_TDATA[32'd1];

assign local_temp_V_2_fu_439_p3 = weights_V_TDATA[32'd2];

assign local_temp_V_3_fu_447_p3 = weights_V_TDATA[32'd3];

assign local_temp_V_4_fu_493_p3 = weights_V_TDATA[32'd4];

assign local_temp_V_5_fu_501_p3 = weights_V_TDATA[32'd5];

assign local_temp_V_6_fu_547_p3 = weights_V_TDATA[32'd6];

assign local_temp_V_7_fu_555_p3 = weights_V_TDATA[32'd7];

assign local_temp_V_8_fu_601_p3 = weights_V_TDATA[32'd8];

assign local_temp_V_9_fu_609_p3 = weights_V_TDATA[32'd9];

assign local_temp_V_fu_381_p1 = weights_V_TDATA[0:0];

assign nf_3_fu_850_p3 = ((icmp_ln302_fu_844_p2[0:0] == 1'b1) ? 32'd0 : nf_fu_838_p2);

assign nf_fu_838_p2 = (ap_sig_allocacmp_nf_2 + 32'd1);

assign out_V_TDATA = {{{{{{{{result_V_7_fu_1150_p2}, {result_V_6_fu_1138_p2}}, {result_V_5_fu_1119_p2}}, {result_V_4_fu_1107_p2}}, {result_V_3_fu_1088_p2}}, {result_V_2_fu_1069_p2}}, {result_V_1_fu_1057_p2}}, {result_V_fu_1038_p2}};

assign p_Result_1_fu_409_p3 = ap_phi_mux_inElem_1_phi_fu_202_p18[32'd1];

assign p_Result_s_fu_371_p1 = ap_phi_mux_inElem_1_phi_fu_202_p18[0:0];

assign result_V_1_fu_1057_p2 = (icmp_ln1039_1_fu_1051_p2 ^ 1'd1);

assign result_V_2_fu_1069_p2 = (icmp_ln1039_2_fu_1063_p2 ^ 1'd1);

assign result_V_3_fu_1088_p2 = (icmp_ln1039_3_fu_1082_p2 ^ 1'd1);

assign result_V_4_fu_1107_p2 = (icmp_ln1039_4_fu_1101_p2 ^ 1'd1);

assign result_V_5_fu_1119_p2 = (icmp_ln1039_5_fu_1113_p2 ^ 1'd1);

assign result_V_6_fu_1138_p2 = (icmp_ln1039_6_fu_1132_p2 ^ 1'd1);

assign result_V_7_fu_1150_p2 = (icmp_ln1039_7_fu_1144_p2 ^ 1'd1);

assign result_V_fu_1038_p2 = (icmp_ln1039_fu_1032_p2 ^ 1'd1);

assign select_ln1039_1_fu_1044_p3 = ((trunc_ln218_reg_1403[0:0] == 1'b1) ? 6'd7 : 6'd8);

assign select_ln1039_2_fu_1075_p3 = ((trunc_ln218_reg_1403[0:0] == 1'b1) ? 6'd10 : 6'd9);

assign select_ln1039_3_fu_1094_p3 = ((trunc_ln218_reg_1403[0:0] == 1'b1) ? 6'd10 : 6'd7);

assign select_ln1039_4_fu_1125_p3 = ((trunc_ln218_reg_1403[0:0] == 1'b1) ? 6'd7 : 6'd9);

assign select_ln1039_fu_1025_p3 = ((trunc_ln218_reg_1403[0:0] == 1'b1) ? 6'd9 : 6'd10);

assign select_ln272_1_fu_904_p3 = ((icmp_ln272_reg_1347[0:0] == 1'b1) ? 6'd0 : add_i_i_i3_6_166_fu_136);

assign select_ln272_2_fu_911_p3 = ((icmp_ln272_reg_1347[0:0] == 1'b1) ? 6'd0 : add_i_i_i3_5_164_fu_132);

assign select_ln272_3_fu_918_p3 = ((icmp_ln272_reg_1347[0:0] == 1'b1) ? 6'd0 : add_i_i_i3_4_162_fu_128);

assign select_ln272_4_fu_925_p3 = ((icmp_ln272_reg_1347[0:0] == 1'b1) ? 6'd0 : add_i_i_i3_3_160_fu_124);

assign select_ln272_5_fu_932_p3 = ((icmp_ln272_reg_1347[0:0] == 1'b1) ? 6'd0 : add_i_i_i3_2_158_fu_120);

assign select_ln272_6_fu_939_p3 = ((icmp_ln272_reg_1347[0:0] == 1'b1) ? 6'd0 : add_i_i_i3_1_156_fu_116);

assign select_ln272_7_fu_946_p3 = ((icmp_ln272_reg_1347[0:0] == 1'b1) ? 6'd0 : add_i_i_i3_12754_fu_112);

assign select_ln272_fu_897_p3 = ((icmp_ln272_reg_1347[0:0] == 1'b1) ? 6'd0 : add_i_i_i3_7_168_fu_140);

assign sf_2_fu_817_p2 = (ap_sig_allocacmp_sf_1 + 32'd1);

assign tmp_fu_292_p9 = ap_sig_allocacmp_sf_1[2:0];

assign trunc_ln218_fu_834_p1 = ap_sig_allocacmp_nf_2[0:0];

assign trunc_ln257_fu_327_p1 = ap_sig_allocacmp_sf_1[2:0];

assign xor_ln1019_10_fu_525_p2 = (p_Result_1_fu_409_p3 ^ local_temp_V_5_fu_501_p3);

assign xor_ln1019_11_fu_531_p2 = (xor_ln1019_10_fu_525_p2 ^ 1'd1);

assign xor_ln1019_12_fu_563_p2 = (local_temp_V_6_fu_547_p3 ^ 1'd1);

assign xor_ln1019_13_fu_569_p2 = (xor_ln1019_12_fu_563_p2 ^ p_Result_s_fu_371_p1);

assign xor_ln1019_14_fu_579_p2 = (p_Result_1_fu_409_p3 ^ local_temp_V_7_fu_555_p3);

assign xor_ln1019_15_fu_585_p2 = (xor_ln1019_14_fu_579_p2 ^ 1'd1);

assign xor_ln1019_16_fu_617_p2 = (local_temp_V_8_fu_601_p3 ^ 1'd1);

assign xor_ln1019_17_fu_623_p2 = (xor_ln1019_16_fu_617_p2 ^ p_Result_s_fu_371_p1);

assign xor_ln1019_18_fu_633_p2 = (p_Result_1_fu_409_p3 ^ local_temp_V_9_fu_609_p3);

assign xor_ln1019_19_fu_639_p2 = (xor_ln1019_18_fu_633_p2 ^ 1'd1);

assign xor_ln1019_1_fu_399_p2 = (xor_ln1019_fu_393_p2 ^ p_Result_s_fu_371_p1);

assign xor_ln1019_20_fu_671_p2 = (local_temp_V_10_fu_655_p3 ^ 1'd1);

assign xor_ln1019_21_fu_677_p2 = (xor_ln1019_20_fu_671_p2 ^ p_Result_s_fu_371_p1);

assign xor_ln1019_22_fu_687_p2 = (p_Result_1_fu_409_p3 ^ local_temp_V_11_fu_663_p3);

assign xor_ln1019_23_fu_693_p2 = (xor_ln1019_22_fu_687_p2 ^ 1'd1);

assign xor_ln1019_24_fu_725_p2 = (local_temp_V_12_fu_709_p3 ^ 1'd1);

assign xor_ln1019_25_fu_731_p2 = (xor_ln1019_24_fu_725_p2 ^ p_Result_s_fu_371_p1);

assign xor_ln1019_26_fu_741_p2 = (local_temp_V_13_fu_717_p3 ^ 1'd1);

assign xor_ln1019_27_fu_747_p2 = (xor_ln1019_26_fu_741_p2 ^ p_Result_1_fu_409_p3);

assign xor_ln1019_28_fu_779_p2 = (local_temp_V_14_fu_763_p3 ^ 1'd1);

assign xor_ln1019_29_fu_785_p2 = (xor_ln1019_28_fu_779_p2 ^ p_Result_s_fu_371_p1);

assign xor_ln1019_2_fu_417_p2 = (p_Result_1_fu_409_p3 ^ local_temp_V_1_fu_385_p3);

assign xor_ln1019_30_fu_795_p2 = (local_temp_V_15_fu_771_p3 ^ 1'd1);

assign xor_ln1019_31_fu_801_p2 = (xor_ln1019_30_fu_795_p2 ^ p_Result_1_fu_409_p3);

assign xor_ln1019_3_fu_423_p2 = (xor_ln1019_2_fu_417_p2 ^ 1'd1);

assign xor_ln1019_4_fu_455_p2 = (local_temp_V_2_fu_439_p3 ^ 1'd1);

assign xor_ln1019_5_fu_461_p2 = (xor_ln1019_4_fu_455_p2 ^ p_Result_s_fu_371_p1);

assign xor_ln1019_6_fu_471_p2 = (p_Result_1_fu_409_p3 ^ local_temp_V_3_fu_447_p3);

assign xor_ln1019_7_fu_477_p2 = (xor_ln1019_6_fu_471_p2 ^ 1'd1);

assign xor_ln1019_8_fu_509_p2 = (local_temp_V_4_fu_493_p3 ^ 1'd1);

assign xor_ln1019_9_fu_515_p2 = (xor_ln1019_8_fu_509_p2 ^ p_Result_s_fu_371_p1);

assign xor_ln1019_fu_393_p2 = (local_temp_V_fu_381_p1 ^ 1'd1);

assign zext_ln1019_1_fu_521_p1 = xor_ln1019_9_fu_515_p2;

assign zext_ln1019_2_fu_575_p1 = xor_ln1019_13_fu_569_p2;

assign zext_ln1019_3_fu_629_p1 = xor_ln1019_17_fu_623_p2;

assign zext_ln1019_4_fu_683_p1 = xor_ln1019_21_fu_677_p2;

assign zext_ln1019_5_fu_737_p1 = xor_ln1019_25_fu_731_p2;

assign zext_ln1019_6_fu_791_p1 = xor_ln1019_29_fu_785_p2;

assign zext_ln1019_fu_467_p1 = xor_ln1019_5_fu_461_p2;

assign zext_ln780_fu_405_p1 = xor_ln1019_1_fu_399_p2;

assign zext_ln840_10_fu_699_p1 = xor_ln1019_23_fu_693_p2;

assign zext_ln840_11_fu_998_p1 = add_ln840_10_reg_1384;

assign zext_ln840_12_fu_753_p1 = xor_ln1019_27_fu_747_p2;

assign zext_ln840_13_fu_1007_p1 = add_ln840_12_reg_1389;

assign zext_ln840_14_fu_807_p1 = xor_ln1019_31_fu_801_p2;

assign zext_ln840_15_fu_1016_p1 = add_ln840_14_reg_1394;

assign zext_ln840_1_fu_953_p1 = add_ln840_reg_1359;

assign zext_ln840_2_fu_483_p1 = xor_ln1019_7_fu_477_p2;

assign zext_ln840_3_fu_962_p1 = add_ln840_2_reg_1364;

assign zext_ln840_4_fu_537_p1 = xor_ln1019_11_fu_531_p2;

assign zext_ln840_5_fu_971_p1 = add_ln840_4_reg_1369;

assign zext_ln840_6_fu_591_p1 = xor_ln1019_15_fu_585_p2;

assign zext_ln840_7_fu_980_p1 = add_ln840_6_reg_1374;

assign zext_ln840_8_fu_645_p1 = xor_ln1019_19_fu_639_p2;

assign zext_ln840_9_fu_989_p1 = add_ln840_8_reg_1379;

assign zext_ln840_fu_429_p1 = xor_ln1019_3_fu_423_p2;

endmodule //MatrixVectorActivation_4_Matrix_Vector_Activate_Stream_Batch
