// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
// Version: 2022.2.2
// Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MatrixVectorActivation_5_Matrix_Vector_Activate_Stream_Batch (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in0_V_TVALID,
        weights_V_TVALID,
        out_V_TREADY,
        in0_V_TDATA,
        in0_V_TREADY,
        out_V_TDATA,
        out_V_TVALID,
        weights_V_TDATA,
        weights_V_TREADY
);

parameter    ap_ST_iter0_fsm_state1 = 1'd1;
parameter    ap_ST_iter1_fsm_state2 = 2'd2;
parameter    ap_ST_iter1_fsm_state0 = 2'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   in0_V_TVALID;
input   weights_V_TVALID;
input   out_V_TREADY;
input  [15:0] in0_V_TDATA;
output   in0_V_TREADY;
output  [7:0] out_V_TDATA;
output   out_V_TVALID;
input  [15:0] weights_V_TDATA;
output   weights_V_TREADY;

reg ap_idle;
reg in0_V_TREADY;
reg out_V_TVALID;
reg weights_V_TREADY;

reg   [0:0] ap_CS_iter0_fsm;
wire    ap_CS_iter0_fsm_state1;
reg   [1:0] ap_CS_iter1_fsm;
wire    ap_CS_iter1_fsm_state0;
wire   [0:0] icmp_ln249_fu_119_p2;
wire   [0:0] icmp_ln253_fu_131_p2;
reg    ap_predicate_op24_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln249_reg_834;
wire   [0:0] icmp_ln249_reg_834_pp0_iter0_reg;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state2_io;
wire    ap_CS_iter1_fsm_state2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    in0_V_TDATA_blk_n;
reg    out_V_TDATA_blk_n;
reg    weights_V_TDATA_blk_n;
reg   [15:0] W_packed_V_reg_841;
reg   [31:0] nf_fu_72;
wire   [31:0] nf_5_fu_154_p3;
wire    ap_loop_init;
reg   [31:0] ap_sig_allocacmp_nf_3;
reg   [2:0] i_fu_76;
wire   [2:0] i_2_fu_125_p2;
reg   [2:0] ap_sig_allocacmp_i_1;
reg   [15:0] p_Val2_s_fu_80;
wire   [31:0] nf_4_fu_142_p2;
wire   [0:0] icmp_ln302_fu_148_p2;
wire   [0:0] p_Result_s_fu_175_p1;
wire   [0:0] local_temp_V_fu_179_p1;
wire   [0:0] xor_ln1019_fu_287_p2;
wire   [0:0] xor_ln1019_1_fu_293_p2;
wire   [0:0] p_Result_1_fu_303_p3;
wire   [0:0] local_temp_V_1_fu_182_p3;
wire   [0:0] xor_ln1019_2_fu_311_p2;
wire   [0:0] xor_ln1019_3_fu_317_p2;
wire   [0:0] p_Result_2_fu_327_p3;
wire   [0:0] local_temp_V_2_fu_189_p3;
wire   [0:0] xor_ln1019_4_fu_335_p2;
wire   [0:0] xor_ln1019_5_fu_341_p2;
wire   [0:0] p_Result_3_fu_351_p3;
wire   [0:0] local_temp_V_3_fu_196_p3;
wire   [0:0] xor_ln1019_6_fu_359_p2;
wire   [0:0] xor_ln1019_7_fu_365_p2;
wire   [0:0] p_Result_4_fu_375_p3;
wire   [0:0] local_temp_V_4_fu_203_p3;
wire   [0:0] xor_ln1019_8_fu_383_p2;
wire   [0:0] xor_ln1019_9_fu_389_p2;
wire   [0:0] p_Result_5_fu_399_p3;
wire   [0:0] local_temp_V_5_fu_210_p3;
wire   [0:0] xor_ln1019_10_fu_407_p2;
wire   [0:0] xor_ln1019_11_fu_413_p2;
wire   [0:0] p_Result_6_fu_423_p3;
wire   [0:0] local_temp_V_6_fu_217_p3;
wire   [0:0] xor_ln1019_12_fu_431_p2;
wire   [0:0] xor_ln1019_13_fu_437_p2;
wire   [0:0] p_Result_7_fu_447_p3;
wire   [0:0] local_temp_V_7_fu_224_p3;
wire   [0:0] xor_ln1019_14_fu_455_p2;
wire   [0:0] xor_ln1019_15_fu_461_p2;
wire   [0:0] p_Result_8_fu_471_p3;
wire   [0:0] local_temp_V_8_fu_231_p3;
wire   [0:0] xor_ln1019_16_fu_479_p2;
wire   [0:0] xor_ln1019_17_fu_485_p2;
wire   [0:0] p_Result_9_fu_495_p3;
wire   [0:0] local_temp_V_9_fu_238_p3;
wire   [0:0] xor_ln1019_18_fu_503_p2;
wire   [0:0] xor_ln1019_19_fu_509_p2;
wire   [0:0] p_Result_10_fu_519_p3;
wire   [0:0] local_temp_V_10_fu_245_p3;
wire   [0:0] xor_ln1019_20_fu_527_p2;
wire   [0:0] xor_ln1019_21_fu_533_p2;
wire   [0:0] p_Result_11_fu_543_p3;
wire   [0:0] local_temp_V_11_fu_252_p3;
wire   [0:0] xor_ln1019_22_fu_551_p2;
wire   [0:0] xor_ln1019_23_fu_557_p2;
wire   [0:0] p_Result_12_fu_567_p3;
wire   [0:0] local_temp_V_12_fu_259_p3;
wire   [0:0] xor_ln1019_24_fu_575_p2;
wire   [0:0] xor_ln1019_25_fu_581_p2;
wire   [0:0] p_Result_13_fu_591_p3;
wire   [0:0] local_temp_V_13_fu_266_p3;
wire   [0:0] xor_ln1019_26_fu_599_p2;
wire   [0:0] xor_ln1019_27_fu_605_p2;
wire   [0:0] p_Result_14_fu_615_p3;
wire   [0:0] local_temp_V_14_fu_273_p3;
wire   [0:0] xor_ln1019_28_fu_623_p2;
wire   [0:0] xor_ln1019_29_fu_629_p2;
wire   [0:0] p_Result_15_fu_639_p3;
wire   [0:0] local_temp_V_15_fu_280_p3;
wire   [0:0] xor_ln1019_30_fu_647_p2;
wire   [0:0] xor_ln1019_31_fu_653_p2;
wire   [1:0] zext_ln780_1_fu_323_p1;
wire   [1:0] zext_ln780_fu_299_p1;
wire   [1:0] add_ln840_fu_663_p2;
wire   [1:0] zext_ln780_2_fu_347_p1;
wire   [1:0] zext_ln780_3_fu_371_p1;
wire   [1:0] add_ln840_1_fu_673_p2;
wire   [2:0] zext_ln840_2_fu_679_p1;
wire   [2:0] zext_ln840_1_fu_669_p1;
wire   [2:0] add_ln840_2_fu_683_p2;
wire   [1:0] zext_ln780_4_fu_395_p1;
wire   [1:0] zext_ln780_5_fu_419_p1;
wire   [1:0] add_ln840_3_fu_693_p2;
wire   [1:0] zext_ln780_6_fu_443_p1;
wire   [1:0] zext_ln780_7_fu_467_p1;
wire   [1:0] add_ln840_4_fu_703_p2;
wire   [2:0] zext_ln840_5_fu_709_p1;
wire   [2:0] zext_ln840_4_fu_699_p1;
wire   [2:0] add_ln840_5_fu_713_p2;
wire   [3:0] zext_ln840_6_fu_719_p1;
wire   [3:0] zext_ln840_3_fu_689_p1;
wire   [3:0] add_ln840_6_fu_723_p2;
wire   [1:0] zext_ln780_8_fu_491_p1;
wire   [1:0] zext_ln780_9_fu_515_p1;
wire   [1:0] add_ln840_7_fu_733_p2;
wire   [1:0] zext_ln780_10_fu_539_p1;
wire   [1:0] zext_ln780_11_fu_563_p1;
wire   [1:0] add_ln840_8_fu_743_p2;
wire   [2:0] zext_ln840_9_fu_749_p1;
wire   [2:0] zext_ln840_8_fu_739_p1;
wire   [2:0] add_ln840_9_fu_753_p2;
wire   [1:0] zext_ln780_12_fu_587_p1;
wire   [1:0] zext_ln780_13_fu_611_p1;
wire   [1:0] add_ln840_10_fu_763_p2;
wire   [1:0] zext_ln780_14_fu_635_p1;
wire   [1:0] zext_ln840_fu_659_p1;
wire   [1:0] add_ln840_11_fu_773_p2;
wire   [2:0] zext_ln840_12_fu_779_p1;
wire   [2:0] zext_ln840_11_fu_769_p1;
wire   [2:0] add_ln840_12_fu_783_p2;
wire   [3:0] zext_ln840_13_fu_789_p1;
wire   [3:0] zext_ln840_10_fu_759_p1;
wire   [3:0] add_ln840_13_fu_793_p2;
wire   [4:0] zext_ln840_14_fu_799_p1;
wire   [4:0] zext_ln840_7_fu_729_p1;
wire   [4:0] outElem_m_val_V_fu_803_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_iter0_fsm;
reg   [1:0] ap_NS_iter1_fsm;
reg    ap_ST_iter0_fsm_state1_blk;
reg    ap_ST_iter1_fsm_state2_blk;
wire    ap_start_int;
reg    ap_condition_608;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_iter0_fsm = 1'd1;
#0 ap_CS_iter1_fsm = 2'd1;
#0 ap_done_reg = 1'b0;
end

MatrixVectorActivation_5_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((1'b1 == ap_block_state2_io) | ((icmp_ln249_reg_834 == 1'd0) & (out_V_TREADY == 1'b0))) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state2_io) | ((icmp_ln249_reg_834 == 1'd0) & (out_V_TREADY == 1'b0))) & (ap_loop_exit_ready == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((icmp_ln249_reg_834 == 1'd0) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_119_p2 == 1'd0)) | ((ap_predicate_op24_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_608)) begin
        if ((icmp_ln249_fu_119_p2 == 1'd0)) begin
            i_fu_76 <= i_2_fu_125_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_76 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_608)) begin
        if ((icmp_ln249_fu_119_p2 == 1'd0)) begin
            nf_fu_72 <= nf_5_fu_154_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            nf_fu_72 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((icmp_ln249_reg_834 == 1'd0) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_119_p2 == 1'd0)) | ((ap_predicate_op24_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln249_fu_119_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        W_packed_V_reg_841 <= weights_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((icmp_ln249_reg_834 == 1'd0) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_119_p2 == 1'd0)) | ((ap_predicate_op24_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        icmp_ln249_reg_834 <= icmp_ln249_fu_119_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((icmp_ln249_reg_834 == 1'd0) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_119_p2 == 1'd0)) | ((ap_predicate_op24_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln253_fu_131_p2 == 1'd1) & (icmp_ln249_fu_119_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        p_Val2_s_fu_80 <= in0_V_TDATA;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_119_p2 == 1'd0)) | ((ap_predicate_op24_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)))) begin
        ap_ST_iter0_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_iter0_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_block_state2_io) | ((icmp_ln249_reg_834 == 1'd0) & (out_V_TREADY == 1'b0)))) begin
        ap_ST_iter1_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_iter1_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((icmp_ln249_reg_834 == 1'd0) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_119_p2 == 1'd0)) | ((ap_predicate_op24_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln249_fu_119_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state2_io) | ((icmp_ln249_reg_834 == 1'd0) & (out_V_TREADY == 1'b0))) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((icmp_ln249_reg_834 == 1'd0) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_119_p2 == 1'd0)) | ((ap_predicate_op24_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_sig_allocacmp_i_1 = 3'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_76;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_sig_allocacmp_nf_3 = 32'd0;
    end else begin
        ap_sig_allocacmp_nf_3 = nf_fu_72;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (ap_predicate_op24_read_state1 == 1'b1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        in0_V_TDATA_blk_n = in0_V_TVALID;
    end else begin
        in0_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((icmp_ln249_reg_834 == 1'd0) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_119_p2 == 1'd0)) | ((ap_predicate_op24_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (ap_predicate_op24_read_state1 == 1'b1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        in0_V_TREADY = 1'b1;
    end else begin
        in0_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln249_reg_834 == 1'd0) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        out_V_TDATA_blk_n = out_V_TREADY;
    end else begin
        out_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state2_io) | ((icmp_ln249_reg_834 == 1'd0) & (out_V_TREADY == 1'b0))) & (icmp_ln249_reg_834 == 1'd0) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        out_V_TVALID = 1'b1;
    end else begin
        out_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln249_fu_119_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        weights_V_TDATA_blk_n = weights_V_TVALID;
    end else begin
        weights_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((icmp_ln249_reg_834 == 1'd0) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_119_p2 == 1'd0)) | ((ap_predicate_op24_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln249_fu_119_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        weights_V_TREADY = 1'b1;
    end else begin
        weights_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state2 : begin
            if ((~((1'b1 == ap_block_state2_io) | ((icmp_ln249_reg_834 == 1'd0) & (out_V_TREADY == 1'b0))) & ((1'b0 == ap_CS_iter0_fsm_state1) | ((1'b1 == ap_CS_iter0_fsm_state1) & ((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_119_p2 == 1'd0)) | ((ap_predicate_op24_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))))))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else if (((~((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_119_p2 == 1'd0)) | ((ap_predicate_op24_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & ~((1'b1 == ap_block_state2_io) | ((icmp_ln249_reg_834 == 1'd0) & (out_V_TREADY == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b1 == ap_block_state2_io) | ((icmp_ln249_reg_834 == 1'd0) & (out_V_TREADY == 1'b0))) & (icmp_ln249_reg_834_pp0_iter0_reg == 1'd1) & (1'b1 == ap_CS_iter1_fsm_state2)))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((icmp_ln249_reg_834 == 1'd0) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_119_p2 == 1'd0)) | ((ap_predicate_op24_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

assign add_ln840_10_fu_763_p2 = (zext_ln780_12_fu_587_p1 + zext_ln780_13_fu_611_p1);

assign add_ln840_11_fu_773_p2 = (zext_ln780_14_fu_635_p1 + zext_ln840_fu_659_p1);

assign add_ln840_12_fu_783_p2 = (zext_ln840_12_fu_779_p1 + zext_ln840_11_fu_769_p1);

assign add_ln840_13_fu_793_p2 = (zext_ln840_13_fu_789_p1 + zext_ln840_10_fu_759_p1);

assign add_ln840_1_fu_673_p2 = (zext_ln780_2_fu_347_p1 + zext_ln780_3_fu_371_p1);

assign add_ln840_2_fu_683_p2 = (zext_ln840_2_fu_679_p1 + zext_ln840_1_fu_669_p1);

assign add_ln840_3_fu_693_p2 = (zext_ln780_4_fu_395_p1 + zext_ln780_5_fu_419_p1);

assign add_ln840_4_fu_703_p2 = (zext_ln780_6_fu_443_p1 + zext_ln780_7_fu_467_p1);

assign add_ln840_5_fu_713_p2 = (zext_ln840_5_fu_709_p1 + zext_ln840_4_fu_699_p1);

assign add_ln840_6_fu_723_p2 = (zext_ln840_6_fu_719_p1 + zext_ln840_3_fu_689_p1);

assign add_ln840_7_fu_733_p2 = (zext_ln780_8_fu_491_p1 + zext_ln780_9_fu_515_p1);

assign add_ln840_8_fu_743_p2 = (zext_ln780_10_fu_539_p1 + zext_ln780_11_fu_563_p1);

assign add_ln840_9_fu_753_p2 = (zext_ln840_9_fu_749_p1 + zext_ln840_8_fu_739_p1);

assign add_ln840_fu_663_p2 = (zext_ln780_1_fu_323_p1 + zext_ln780_fu_299_p1);

assign ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm[32'd0];

assign ap_CS_iter1_fsm_state0 = ap_CS_iter1_fsm[32'd0];

assign ap_CS_iter1_fsm_state2 = ap_CS_iter1_fsm[32'd1];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_119_p2 == 1'd0)) | ((ap_predicate_op24_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state2_io = ((icmp_ln249_reg_834 == 1'd0) & (out_V_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((icmp_ln249_reg_834 == 1'd0) & (out_V_TREADY == 1'b0));
end

always @ (*) begin
    ap_condition_608 = (~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((icmp_ln249_reg_834 == 1'd0) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_119_p2 == 1'd0)) | ((ap_predicate_op24_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op24_read_state1 = ((icmp_ln253_fu_131_p2 == 1'd1) & (icmp_ln249_fu_119_p2 == 1'd0));
end

assign i_2_fu_125_p2 = (ap_sig_allocacmp_i_1 + 3'd1);

assign icmp_ln249_fu_119_p2 = ((ap_sig_allocacmp_i_1 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln249_reg_834_pp0_iter0_reg = icmp_ln249_reg_834;

assign icmp_ln253_fu_131_p2 = ((ap_sig_allocacmp_nf_3 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln302_fu_148_p2 = ((nf_4_fu_142_p2 == 32'd5) ? 1'b1 : 1'b0);

assign local_temp_V_10_fu_245_p3 = W_packed_V_reg_841[32'd10];

assign local_temp_V_11_fu_252_p3 = W_packed_V_reg_841[32'd11];

assign local_temp_V_12_fu_259_p3 = W_packed_V_reg_841[32'd12];

assign local_temp_V_13_fu_266_p3 = W_packed_V_reg_841[32'd13];

assign local_temp_V_14_fu_273_p3 = W_packed_V_reg_841[32'd14];

assign local_temp_V_15_fu_280_p3 = W_packed_V_reg_841[32'd15];

assign local_temp_V_1_fu_182_p3 = W_packed_V_reg_841[32'd1];

assign local_temp_V_2_fu_189_p3 = W_packed_V_reg_841[32'd2];

assign local_temp_V_3_fu_196_p3 = W_packed_V_reg_841[32'd3];

assign local_temp_V_4_fu_203_p3 = W_packed_V_reg_841[32'd4];

assign local_temp_V_5_fu_210_p3 = W_packed_V_reg_841[32'd5];

assign local_temp_V_6_fu_217_p3 = W_packed_V_reg_841[32'd6];

assign local_temp_V_7_fu_224_p3 = W_packed_V_reg_841[32'd7];

assign local_temp_V_8_fu_231_p3 = W_packed_V_reg_841[32'd8];

assign local_temp_V_9_fu_238_p3 = W_packed_V_reg_841[32'd9];

assign local_temp_V_fu_179_p1 = W_packed_V_reg_841[0:0];

assign nf_4_fu_142_p2 = (ap_sig_allocacmp_nf_3 + 32'd1);

assign nf_5_fu_154_p3 = ((icmp_ln302_fu_148_p2[0:0] == 1'b1) ? 32'd0 : nf_4_fu_142_p2);

assign outElem_m_val_V_fu_803_p2 = (zext_ln840_14_fu_799_p1 + zext_ln840_7_fu_729_p1);

assign out_V_TDATA = outElem_m_val_V_fu_803_p2;

assign p_Result_10_fu_519_p3 = p_Val2_s_fu_80[32'd10];

assign p_Result_11_fu_543_p3 = p_Val2_s_fu_80[32'd11];

assign p_Result_12_fu_567_p3 = p_Val2_s_fu_80[32'd12];

assign p_Result_13_fu_591_p3 = p_Val2_s_fu_80[32'd13];

assign p_Result_14_fu_615_p3 = p_Val2_s_fu_80[32'd14];

assign p_Result_15_fu_639_p3 = p_Val2_s_fu_80[32'd15];

assign p_Result_1_fu_303_p3 = p_Val2_s_fu_80[32'd1];

assign p_Result_2_fu_327_p3 = p_Val2_s_fu_80[32'd2];

assign p_Result_3_fu_351_p3 = p_Val2_s_fu_80[32'd3];

assign p_Result_4_fu_375_p3 = p_Val2_s_fu_80[32'd4];

assign p_Result_5_fu_399_p3 = p_Val2_s_fu_80[32'd5];

assign p_Result_6_fu_423_p3 = p_Val2_s_fu_80[32'd6];

assign p_Result_7_fu_447_p3 = p_Val2_s_fu_80[32'd7];

assign p_Result_8_fu_471_p3 = p_Val2_s_fu_80[32'd8];

assign p_Result_9_fu_495_p3 = p_Val2_s_fu_80[32'd9];

assign p_Result_s_fu_175_p1 = p_Val2_s_fu_80[0:0];

assign xor_ln1019_10_fu_407_p2 = (p_Result_5_fu_399_p3 ^ local_temp_V_5_fu_210_p3);

assign xor_ln1019_11_fu_413_p2 = (xor_ln1019_10_fu_407_p2 ^ 1'd1);

assign xor_ln1019_12_fu_431_p2 = (p_Result_6_fu_423_p3 ^ local_temp_V_6_fu_217_p3);

assign xor_ln1019_13_fu_437_p2 = (xor_ln1019_12_fu_431_p2 ^ 1'd1);

assign xor_ln1019_14_fu_455_p2 = (p_Result_7_fu_447_p3 ^ local_temp_V_7_fu_224_p3);

assign xor_ln1019_15_fu_461_p2 = (xor_ln1019_14_fu_455_p2 ^ 1'd1);

assign xor_ln1019_16_fu_479_p2 = (p_Result_8_fu_471_p3 ^ local_temp_V_8_fu_231_p3);

assign xor_ln1019_17_fu_485_p2 = (xor_ln1019_16_fu_479_p2 ^ 1'd1);

assign xor_ln1019_18_fu_503_p2 = (p_Result_9_fu_495_p3 ^ local_temp_V_9_fu_238_p3);

assign xor_ln1019_19_fu_509_p2 = (xor_ln1019_18_fu_503_p2 ^ 1'd1);

assign xor_ln1019_1_fu_293_p2 = (xor_ln1019_fu_287_p2 ^ 1'd1);

assign xor_ln1019_20_fu_527_p2 = (p_Result_10_fu_519_p3 ^ local_temp_V_10_fu_245_p3);

assign xor_ln1019_21_fu_533_p2 = (xor_ln1019_20_fu_527_p2 ^ 1'd1);

assign xor_ln1019_22_fu_551_p2 = (p_Result_11_fu_543_p3 ^ local_temp_V_11_fu_252_p3);

assign xor_ln1019_23_fu_557_p2 = (xor_ln1019_22_fu_551_p2 ^ 1'd1);

assign xor_ln1019_24_fu_575_p2 = (p_Result_12_fu_567_p3 ^ local_temp_V_12_fu_259_p3);

assign xor_ln1019_25_fu_581_p2 = (xor_ln1019_24_fu_575_p2 ^ 1'd1);

assign xor_ln1019_26_fu_599_p2 = (p_Result_13_fu_591_p3 ^ local_temp_V_13_fu_266_p3);

assign xor_ln1019_27_fu_605_p2 = (xor_ln1019_26_fu_599_p2 ^ 1'd1);

assign xor_ln1019_28_fu_623_p2 = (p_Result_14_fu_615_p3 ^ local_temp_V_14_fu_273_p3);

assign xor_ln1019_29_fu_629_p2 = (xor_ln1019_28_fu_623_p2 ^ 1'd1);

assign xor_ln1019_2_fu_311_p2 = (p_Result_1_fu_303_p3 ^ local_temp_V_1_fu_182_p3);

assign xor_ln1019_30_fu_647_p2 = (p_Result_15_fu_639_p3 ^ local_temp_V_15_fu_280_p3);

assign xor_ln1019_31_fu_653_p2 = (xor_ln1019_30_fu_647_p2 ^ 1'd1);

assign xor_ln1019_3_fu_317_p2 = (xor_ln1019_2_fu_311_p2 ^ 1'd1);

assign xor_ln1019_4_fu_335_p2 = (p_Result_2_fu_327_p3 ^ local_temp_V_2_fu_189_p3);

assign xor_ln1019_5_fu_341_p2 = (xor_ln1019_4_fu_335_p2 ^ 1'd1);

assign xor_ln1019_6_fu_359_p2 = (p_Result_3_fu_351_p3 ^ local_temp_V_3_fu_196_p3);

assign xor_ln1019_7_fu_365_p2 = (xor_ln1019_6_fu_359_p2 ^ 1'd1);

assign xor_ln1019_8_fu_383_p2 = (p_Result_4_fu_375_p3 ^ local_temp_V_4_fu_203_p3);

assign xor_ln1019_9_fu_389_p2 = (xor_ln1019_8_fu_383_p2 ^ 1'd1);

assign xor_ln1019_fu_287_p2 = (p_Result_s_fu_175_p1 ^ local_temp_V_fu_179_p1);

assign zext_ln780_10_fu_539_p1 = xor_ln1019_21_fu_533_p2;

assign zext_ln780_11_fu_563_p1 = xor_ln1019_23_fu_557_p2;

assign zext_ln780_12_fu_587_p1 = xor_ln1019_25_fu_581_p2;

assign zext_ln780_13_fu_611_p1 = xor_ln1019_27_fu_605_p2;

assign zext_ln780_14_fu_635_p1 = xor_ln1019_29_fu_629_p2;

assign zext_ln780_1_fu_323_p1 = xor_ln1019_3_fu_317_p2;

assign zext_ln780_2_fu_347_p1 = xor_ln1019_5_fu_341_p2;

assign zext_ln780_3_fu_371_p1 = xor_ln1019_7_fu_365_p2;

assign zext_ln780_4_fu_395_p1 = xor_ln1019_9_fu_389_p2;

assign zext_ln780_5_fu_419_p1 = xor_ln1019_11_fu_413_p2;

assign zext_ln780_6_fu_443_p1 = xor_ln1019_13_fu_437_p2;

assign zext_ln780_7_fu_467_p1 = xor_ln1019_15_fu_461_p2;

assign zext_ln780_8_fu_491_p1 = xor_ln1019_17_fu_485_p2;

assign zext_ln780_9_fu_515_p1 = xor_ln1019_19_fu_509_p2;

assign zext_ln780_fu_299_p1 = xor_ln1019_1_fu_293_p2;

assign zext_ln840_10_fu_759_p1 = add_ln840_9_fu_753_p2;

assign zext_ln840_11_fu_769_p1 = add_ln840_10_fu_763_p2;

assign zext_ln840_12_fu_779_p1 = add_ln840_11_fu_773_p2;

assign zext_ln840_13_fu_789_p1 = add_ln840_12_fu_783_p2;

assign zext_ln840_14_fu_799_p1 = add_ln840_13_fu_793_p2;

assign zext_ln840_1_fu_669_p1 = add_ln840_fu_663_p2;

assign zext_ln840_2_fu_679_p1 = add_ln840_1_fu_673_p2;

assign zext_ln840_3_fu_689_p1 = add_ln840_2_fu_683_p2;

assign zext_ln840_4_fu_699_p1 = add_ln840_3_fu_693_p2;

assign zext_ln840_5_fu_709_p1 = add_ln840_4_fu_703_p2;

assign zext_ln840_6_fu_719_p1 = add_ln840_5_fu_713_p2;

assign zext_ln840_7_fu_729_p1 = add_ln840_6_fu_723_p2;

assign zext_ln840_8_fu_739_p1 = add_ln840_7_fu_733_p2;

assign zext_ln840_9_fu_749_p1 = add_ln840_8_fu_743_p2;

assign zext_ln840_fu_659_p1 = xor_ln1019_31_fu_653_p2;

endmodule //MatrixVectorActivation_5_Matrix_Vector_Activate_Stream_Batch
