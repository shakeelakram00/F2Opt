// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
// Version: 2022.2.2
// Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MatrixVectorActivation_3_Matrix_Vector_Activate_Stream_Batch (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in0_V_TVALID,
        weights_V_TVALID,
        out_V_TREADY,
        in0_V_TDATA,
        in0_V_TREADY,
        out_V_TDATA,
        out_V_TVALID,
        weights_V_TDATA,
        weights_V_TREADY
);

parameter    ap_ST_iter0_fsm_state1 = 1'd1;
parameter    ap_ST_iter1_fsm_state2 = 2'd2;
parameter    ap_ST_iter2_fsm_state3 = 2'd2;
parameter    ap_ST_iter1_fsm_state0 = 2'd1;
parameter    ap_ST_iter2_fsm_state0 = 2'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   in0_V_TVALID;
input   weights_V_TVALID;
input   out_V_TREADY;
input  [23:0] in0_V_TDATA;
output   in0_V_TREADY;
output  [7:0] out_V_TDATA;
output   out_V_TVALID;
input  [23:0] weights_V_TDATA;
output   weights_V_TREADY;

reg ap_idle;
reg in0_V_TREADY;
reg out_V_TVALID;
reg weights_V_TREADY;

reg   [0:0] ap_CS_iter0_fsm;
wire    ap_CS_iter0_fsm_state1;
reg   [1:0] ap_CS_iter1_fsm;
wire    ap_CS_iter1_fsm_state0;
reg   [1:0] ap_CS_iter2_fsm;
wire    ap_CS_iter2_fsm_state0;
wire   [0:0] icmp_ln249_fu_148_p2;
wire   [0:0] icmp_ln253_fu_160_p2;
reg    ap_predicate_op25_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_CS_iter1_fsm_state2;
reg   [0:0] icmp_ln249_reg_1075;
reg   [0:0] icmp_ln249_reg_1075_pp0_iter1_reg;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state3_io;
wire    ap_CS_iter2_fsm_state3;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [3:0] threshs_address0;
reg    threshs_ce0;
wire   [3:0] threshs_q0;
reg    in0_V_TDATA_blk_n;
reg    out_V_TDATA_blk_n;
reg    weights_V_TDATA_blk_n;
reg   [31:0] nf_3_reg_1070;
wire   [0:0] icmp_ln249_reg_1075_pp0_iter0_reg;
reg   [23:0] weights_V_read_reg_1082;
wire   [3:0] add_ln840_8_fu_923_p2;
reg   [3:0] add_ln840_8_reg_1107;
wire   [3:0] add_ln840_18_fu_1007_p2;
reg   [3:0] add_ln840_18_reg_1112;
wire   [63:0] idxprom2_i_fu_1013_p1;
reg   [31:0] nf_1_fu_88;
wire   [31:0] nf_4_fu_187_p3;
wire    ap_loop_init;
reg   [31:0] ap_sig_allocacmp_nf_3;
reg   [4:0] i_fu_92;
wire   [4:0] i_2_fu_154_p2;
reg   [4:0] ap_sig_allocacmp_i_1;
reg   [20:0] p_Val2_s_fu_96;
wire   [20:0] inElem_fu_166_p1;
wire   [31:0] nf_fu_175_p2;
wire   [0:0] icmp_ln302_fu_181_p2;
wire   [0:0] p_Result_s_fu_208_p1;
wire   [0:0] local_temp_V_fu_212_p1;
wire   [0:0] xor_ln1019_fu_355_p2;
wire   [0:0] xor_ln1019_1_fu_361_p2;
wire   [0:0] p_Result_1_fu_371_p3;
wire   [0:0] local_temp_V_1_fu_215_p3;
wire   [0:0] xor_ln1019_2_fu_379_p2;
wire   [0:0] xor_ln1019_3_fu_385_p2;
wire   [0:0] p_Result_2_fu_395_p3;
wire   [0:0] local_temp_V_2_fu_222_p3;
wire   [0:0] xor_ln1019_4_fu_403_p2;
wire   [0:0] xor_ln1019_5_fu_409_p2;
wire   [0:0] p_Result_3_fu_419_p3;
wire   [0:0] local_temp_V_3_fu_229_p3;
wire   [0:0] xor_ln1019_6_fu_427_p2;
wire   [0:0] xor_ln1019_7_fu_433_p2;
wire   [0:0] p_Result_4_fu_443_p3;
wire   [0:0] local_temp_V_4_fu_236_p3;
wire   [0:0] xor_ln1019_8_fu_451_p2;
wire   [0:0] xor_ln1019_9_fu_457_p2;
wire   [0:0] p_Result_5_fu_467_p3;
wire   [0:0] local_temp_V_5_fu_243_p3;
wire   [0:0] xor_ln1019_10_fu_475_p2;
wire   [0:0] xor_ln1019_11_fu_481_p2;
wire   [0:0] p_Result_6_fu_491_p3;
wire   [0:0] local_temp_V_6_fu_250_p3;
wire   [0:0] xor_ln1019_12_fu_499_p2;
wire   [0:0] xor_ln1019_13_fu_505_p2;
wire   [0:0] p_Result_7_fu_515_p3;
wire   [0:0] local_temp_V_7_fu_257_p3;
wire   [0:0] xor_ln1019_14_fu_523_p2;
wire   [0:0] xor_ln1019_15_fu_529_p2;
wire   [0:0] p_Result_8_fu_539_p3;
wire   [0:0] local_temp_V_8_fu_264_p3;
wire   [0:0] xor_ln1019_16_fu_547_p2;
wire   [0:0] xor_ln1019_17_fu_553_p2;
wire   [0:0] p_Result_9_fu_563_p3;
wire   [0:0] local_temp_V_9_fu_271_p3;
wire   [0:0] xor_ln1019_18_fu_571_p2;
wire   [0:0] xor_ln1019_19_fu_577_p2;
wire   [0:0] p_Result_10_fu_587_p3;
wire   [0:0] local_temp_V_10_fu_278_p3;
wire   [0:0] xor_ln1019_20_fu_595_p2;
wire   [0:0] xor_ln1019_21_fu_601_p2;
wire   [0:0] p_Result_11_fu_611_p3;
wire   [0:0] local_temp_V_11_fu_285_p3;
wire   [0:0] xor_ln1019_22_fu_619_p2;
wire   [0:0] xor_ln1019_23_fu_625_p2;
wire   [0:0] p_Result_12_fu_635_p3;
wire   [0:0] local_temp_V_12_fu_292_p3;
wire   [0:0] xor_ln1019_24_fu_643_p2;
wire   [0:0] xor_ln1019_25_fu_649_p2;
wire   [0:0] p_Result_13_fu_659_p3;
wire   [0:0] local_temp_V_13_fu_299_p3;
wire   [0:0] xor_ln1019_26_fu_667_p2;
wire   [0:0] xor_ln1019_27_fu_673_p2;
wire   [0:0] p_Result_14_fu_683_p3;
wire   [0:0] local_temp_V_14_fu_306_p3;
wire   [0:0] xor_ln1019_28_fu_691_p2;
wire   [0:0] xor_ln1019_29_fu_697_p2;
wire   [0:0] p_Result_15_fu_707_p3;
wire   [0:0] local_temp_V_15_fu_313_p3;
wire   [0:0] xor_ln1019_30_fu_715_p2;
wire   [0:0] xor_ln1019_31_fu_721_p2;
wire   [0:0] p_Result_16_fu_731_p3;
wire   [0:0] local_temp_V_16_fu_320_p3;
wire   [0:0] xor_ln1019_32_fu_739_p2;
wire   [0:0] xor_ln1019_33_fu_745_p2;
wire   [0:0] p_Result_17_fu_755_p3;
wire   [0:0] local_temp_V_17_fu_327_p3;
wire   [0:0] xor_ln1019_34_fu_763_p2;
wire   [0:0] xor_ln1019_35_fu_769_p2;
wire   [0:0] p_Result_18_fu_779_p3;
wire   [0:0] local_temp_V_18_fu_334_p3;
wire   [0:0] xor_ln1019_36_fu_787_p2;
wire   [0:0] xor_ln1019_37_fu_793_p2;
wire   [0:0] p_Result_19_fu_803_p3;
wire   [0:0] local_temp_V_19_fu_341_p3;
wire   [0:0] xor_ln1019_38_fu_811_p2;
wire   [0:0] xor_ln1019_39_fu_817_p2;
wire   [0:0] p_Result_20_fu_827_p3;
wire   [0:0] local_temp_V_20_fu_348_p3;
wire   [0:0] xor_ln1019_40_fu_835_p2;
wire   [0:0] xor_ln1019_41_fu_841_p2;
wire   [1:0] zext_ln780_1_fu_391_p1;
wire   [1:0] zext_ln780_fu_367_p1;
wire   [1:0] add_ln840_fu_851_p2;
wire   [1:0] zext_ln780_3_fu_439_p1;
wire   [1:0] zext_ln780_4_fu_463_p1;
wire   [1:0] add_ln840_1_fu_861_p2;
wire   [1:0] zext_ln780_2_fu_415_p1;
wire   [1:0] add_ln840_2_fu_867_p2;
wire   [2:0] zext_ln840_2_fu_873_p1;
wire   [2:0] zext_ln840_1_fu_857_p1;
wire   [2:0] add_ln840_3_fu_877_p2;
wire   [1:0] zext_ln780_5_fu_487_p1;
wire   [1:0] zext_ln780_6_fu_511_p1;
wire   [1:0] add_ln840_4_fu_887_p2;
wire   [1:0] zext_ln780_8_fu_559_p1;
wire   [1:0] zext_ln780_9_fu_583_p1;
wire   [1:0] add_ln840_5_fu_897_p2;
wire   [1:0] zext_ln780_7_fu_535_p1;
wire   [1:0] add_ln840_6_fu_903_p2;
wire   [2:0] zext_ln840_5_fu_909_p1;
wire   [2:0] zext_ln840_4_fu_893_p1;
wire   [2:0] add_ln840_7_fu_913_p2;
wire   [3:0] zext_ln840_6_fu_919_p1;
wire   [3:0] zext_ln840_3_fu_883_p1;
wire   [1:0] zext_ln780_10_fu_607_p1;
wire   [1:0] zext_ln780_11_fu_631_p1;
wire   [1:0] add_ln840_9_fu_929_p2;
wire   [1:0] zext_ln780_13_fu_679_p1;
wire   [1:0] zext_ln780_14_fu_703_p1;
wire   [1:0] add_ln840_10_fu_939_p2;
wire   [1:0] zext_ln780_12_fu_655_p1;
wire   [1:0] add_ln840_11_fu_945_p2;
wire   [2:0] zext_ln840_9_fu_951_p1;
wire   [2:0] zext_ln840_8_fu_935_p1;
wire   [2:0] add_ln840_12_fu_955_p2;
wire   [1:0] zext_ln780_16_fu_751_p1;
wire   [1:0] zext_ln780_17_fu_775_p1;
wire   [1:0] add_ln840_13_fu_965_p2;
wire   [1:0] zext_ln780_15_fu_727_p1;
wire   [1:0] add_ln840_14_fu_971_p2;
wire   [1:0] zext_ln780_19_fu_823_p1;
wire   [1:0] zext_ln840_fu_847_p1;
wire   [1:0] add_ln840_15_fu_981_p2;
wire   [1:0] zext_ln780_18_fu_799_p1;
wire   [1:0] add_ln840_16_fu_987_p2;
wire   [2:0] zext_ln840_12_fu_993_p1;
wire   [2:0] zext_ln840_11_fu_977_p1;
wire   [2:0] add_ln840_17_fu_997_p2;
wire   [3:0] zext_ln840_13_fu_1003_p1;
wire   [3:0] zext_ln840_10_fu_961_p1;
wire   [4:0] zext_ln840_14_fu_1020_p1;
wire   [4:0] zext_ln840_7_fu_1017_p1;
wire   [4:0] add_ln840_19_fu_1023_p2;
wire   [4:0] zext_ln1039_fu_1029_p1;
wire   [0:0] icmp_ln1039_fu_1033_p2;
wire   [0:0] result_V_fu_1039_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_iter0_fsm;
reg   [1:0] ap_NS_iter1_fsm;
reg   [1:0] ap_NS_iter2_fsm;
reg    ap_ST_iter0_fsm_state1_blk;
wire    ap_ST_iter1_fsm_state2_blk;
reg    ap_ST_iter2_fsm_state3_blk;
wire    ap_start_int;
reg    ap_condition_792;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_iter0_fsm = 1'd1;
#0 ap_CS_iter1_fsm = 2'd1;
#0 ap_CS_iter2_fsm = 2'd1;
#0 ap_done_reg = 1'b0;
end

MatrixVectorActivation_3_Matrix_Vector_Activate_Stream_Batch_threshs_ROM_AUTO_1R #(
    .DataWidth( 4 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_address0),
    .ce0(threshs_ce0),
    .q0(threshs_q0)
);

MatrixVectorActivation_3_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter2_fsm <= ap_ST_iter2_fsm_state0;
    end else begin
        ap_CS_iter2_fsm <= ap_NS_iter2_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((1'b1 == ap_block_state3_io) | ((icmp_ln249_reg_1075_pp0_iter1_reg == 1'd0) & (out_V_TREADY == 1'b0))) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state3_io) | ((icmp_ln249_reg_1075_pp0_iter1_reg == 1'd0) & (out_V_TREADY == 1'b0))) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if ((~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((icmp_ln249_reg_1075_pp0_iter1_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_792)) begin
        if ((icmp_ln249_fu_148_p2 == 1'd0)) begin
            i_fu_92 <= i_2_fu_154_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_92 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_792)) begin
        if ((icmp_ln249_fu_148_p2 == 1'd0)) begin
            nf_1_fu_88 <= nf_4_fu_187_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            nf_1_fu_88 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((icmp_ln249_reg_1075_pp0_iter1_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2) & (icmp_ln249_reg_1075_pp0_iter0_reg == 1'd0))) begin
        add_ln840_18_reg_1112 <= add_ln840_18_fu_1007_p2;
        add_ln840_8_reg_1107 <= add_ln840_8_fu_923_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((icmp_ln249_reg_1075_pp0_iter1_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_148_p2 == 1'd0)) | ((ap_predicate_op25_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln249_reg_1075 <= icmp_ln249_fu_148_p2;
        nf_3_reg_1070 <= ap_sig_allocacmp_nf_3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((icmp_ln249_reg_1075_pp0_iter1_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        icmp_ln249_reg_1075_pp0_iter1_reg <= icmp_ln249_reg_1075;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((icmp_ln249_reg_1075_pp0_iter1_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_148_p2 == 1'd0)) | ((ap_predicate_op25_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln253_fu_160_p2 == 1'd1) & (icmp_ln249_fu_148_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        p_Val2_s_fu_96 <= inElem_fu_166_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((icmp_ln249_reg_1075_pp0_iter1_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_148_p2 == 1'd0)) | ((ap_predicate_op25_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln249_fu_148_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        weights_V_read_reg_1082 <= weights_V_TDATA;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_148_p2 == 1'd0)) | ((ap_predicate_op25_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)))) begin
        ap_ST_iter0_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_iter0_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_iter1_fsm_state2_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_block_state3_io) | ((icmp_ln249_reg_1075_pp0_iter1_reg == 1'd0) & (out_V_TREADY == 1'b0)))) begin
        ap_ST_iter2_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_iter2_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((icmp_ln249_reg_1075_pp0_iter1_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_148_p2 == 1'd0)) | ((ap_predicate_op25_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln249_fu_148_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state3_io) | ((icmp_ln249_reg_1075_pp0_iter1_reg == 1'd0) & (out_V_TREADY == 1'b0))) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state0) & (1'b1 == ap_CS_iter1_fsm_state0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((icmp_ln249_reg_1075_pp0_iter1_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_148_p2 == 1'd0)) | ((ap_predicate_op25_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_1 = 5'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_92;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_nf_3 = 32'd0;
    end else begin
        ap_sig_allocacmp_nf_3 = nf_1_fu_88;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (ap_predicate_op25_read_state1 == 1'b1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        in0_V_TDATA_blk_n = in0_V_TVALID;
    end else begin
        in0_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((icmp_ln249_reg_1075_pp0_iter1_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_148_p2 == 1'd0)) | ((ap_predicate_op25_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (ap_predicate_op25_read_state1 == 1'b1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        in0_V_TREADY = 1'b1;
    end else begin
        in0_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln249_reg_1075_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
        out_V_TDATA_blk_n = out_V_TREADY;
    end else begin
        out_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state3_io) | ((icmp_ln249_reg_1075_pp0_iter1_reg == 1'd0) & (out_V_TREADY == 1'b0))) & (icmp_ln249_reg_1075_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
        out_V_TVALID = 1'b1;
    end else begin
        out_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((icmp_ln249_reg_1075_pp0_iter1_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        threshs_ce0 = 1'b1;
    end else begin
        threshs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln249_fu_148_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        weights_V_TDATA_blk_n = weights_V_TVALID;
    end else begin
        weights_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((icmp_ln249_reg_1075_pp0_iter1_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_148_p2 == 1'd0)) | ((ap_predicate_op25_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln249_fu_148_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        weights_V_TREADY = 1'b1;
    end else begin
        weights_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state2 : begin
            if ((~((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_148_p2 == 1'd0)) | ((ap_predicate_op25_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & ~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((icmp_ln249_reg_1075_pp0_iter1_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else if ((~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((icmp_ln249_reg_1075_pp0_iter1_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & ((1'b0 == ap_CS_iter0_fsm_state1) | ((1'b1 == ap_CS_iter0_fsm_state1) & ((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_148_p2 == 1'd0)) | ((ap_predicate_op25_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))))))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((icmp_ln249_reg_1075_pp0_iter1_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_148_p2 == 1'd0)) | ((ap_predicate_op25_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter2_fsm)
        ap_ST_iter2_fsm_state3 : begin
            if ((~((1'b1 == ap_block_state3_io) | ((icmp_ln249_reg_1075_pp0_iter1_reg == 1'd0) & (out_V_TREADY == 1'b0))) & (1'b0 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end else if (((~((1'b1 == ap_block_state3_io) | ((icmp_ln249_reg_1075_pp0_iter1_reg == 1'd0) & (out_V_TREADY == 1'b0))) & (icmp_ln249_reg_1075_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_iter2_fsm_state3)) | (~((1'b1 == ap_block_state3_io) | ((icmp_ln249_reg_1075_pp0_iter1_reg == 1'd0) & (out_V_TREADY == 1'b0))) & (1'b1 == ap_CS_iter1_fsm_state2)))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end
        end
        ap_ST_iter2_fsm_state0 : begin
            if ((~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((icmp_ln249_reg_1075_pp0_iter1_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter2_fsm = 'bx;
        end
    endcase
end

assign add_ln840_10_fu_939_p2 = (zext_ln780_13_fu_679_p1 + zext_ln780_14_fu_703_p1);

assign add_ln840_11_fu_945_p2 = (add_ln840_10_fu_939_p2 + zext_ln780_12_fu_655_p1);

assign add_ln840_12_fu_955_p2 = (zext_ln840_9_fu_951_p1 + zext_ln840_8_fu_935_p1);

assign add_ln840_13_fu_965_p2 = (zext_ln780_16_fu_751_p1 + zext_ln780_17_fu_775_p1);

assign add_ln840_14_fu_971_p2 = (add_ln840_13_fu_965_p2 + zext_ln780_15_fu_727_p1);

assign add_ln840_15_fu_981_p2 = (zext_ln780_19_fu_823_p1 + zext_ln840_fu_847_p1);

assign add_ln840_16_fu_987_p2 = (add_ln840_15_fu_981_p2 + zext_ln780_18_fu_799_p1);

assign add_ln840_17_fu_997_p2 = (zext_ln840_12_fu_993_p1 + zext_ln840_11_fu_977_p1);

assign add_ln840_18_fu_1007_p2 = (zext_ln840_13_fu_1003_p1 + zext_ln840_10_fu_961_p1);

assign add_ln840_19_fu_1023_p2 = (zext_ln840_14_fu_1020_p1 + zext_ln840_7_fu_1017_p1);

assign add_ln840_1_fu_861_p2 = (zext_ln780_3_fu_439_p1 + zext_ln780_4_fu_463_p1);

assign add_ln840_2_fu_867_p2 = (add_ln840_1_fu_861_p2 + zext_ln780_2_fu_415_p1);

assign add_ln840_3_fu_877_p2 = (zext_ln840_2_fu_873_p1 + zext_ln840_1_fu_857_p1);

assign add_ln840_4_fu_887_p2 = (zext_ln780_5_fu_487_p1 + zext_ln780_6_fu_511_p1);

assign add_ln840_5_fu_897_p2 = (zext_ln780_8_fu_559_p1 + zext_ln780_9_fu_583_p1);

assign add_ln840_6_fu_903_p2 = (add_ln840_5_fu_897_p2 + zext_ln780_7_fu_535_p1);

assign add_ln840_7_fu_913_p2 = (zext_ln840_5_fu_909_p1 + zext_ln840_4_fu_893_p1);

assign add_ln840_8_fu_923_p2 = (zext_ln840_6_fu_919_p1 + zext_ln840_3_fu_883_p1);

assign add_ln840_9_fu_929_p2 = (zext_ln780_10_fu_607_p1 + zext_ln780_11_fu_631_p1);

assign add_ln840_fu_851_p2 = (zext_ln780_1_fu_391_p1 + zext_ln780_fu_367_p1);

assign ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm[32'd0];

assign ap_CS_iter1_fsm_state0 = ap_CS_iter1_fsm[32'd0];

assign ap_CS_iter1_fsm_state2 = ap_CS_iter1_fsm[32'd1];

assign ap_CS_iter2_fsm_state0 = ap_CS_iter2_fsm[32'd0];

assign ap_CS_iter2_fsm_state3 = ap_CS_iter2_fsm[32'd1];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_148_p2 == 1'd0)) | ((ap_predicate_op25_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((icmp_ln249_reg_1075_pp0_iter1_reg == 1'd0) & (out_V_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((icmp_ln249_reg_1075_pp0_iter1_reg == 1'd0) & (out_V_TREADY == 1'b0));
end

always @ (*) begin
    ap_condition_792 = (~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((icmp_ln249_reg_1075_pp0_iter1_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_148_p2 == 1'd0)) | ((ap_predicate_op25_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op25_read_state1 = ((icmp_ln253_fu_160_p2 == 1'd1) & (icmp_ln249_fu_148_p2 == 1'd0));
end

assign i_2_fu_154_p2 = (ap_sig_allocacmp_i_1 + 5'd1);

assign icmp_ln1039_fu_1033_p2 = ((add_ln840_19_fu_1023_p2 < zext_ln1039_fu_1029_p1) ? 1'b1 : 1'b0);

assign icmp_ln249_fu_148_p2 = ((ap_sig_allocacmp_i_1 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln249_reg_1075_pp0_iter0_reg = icmp_ln249_reg_1075;

assign icmp_ln253_fu_160_p2 = ((ap_sig_allocacmp_nf_3 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln302_fu_181_p2 = ((nf_fu_175_p2 == 32'd16) ? 1'b1 : 1'b0);

assign idxprom2_i_fu_1013_p1 = nf_3_reg_1070;

assign inElem_fu_166_p1 = in0_V_TDATA[20:0];

assign local_temp_V_10_fu_278_p3 = weights_V_read_reg_1082[32'd10];

assign local_temp_V_11_fu_285_p3 = weights_V_read_reg_1082[32'd11];

assign local_temp_V_12_fu_292_p3 = weights_V_read_reg_1082[32'd12];

assign local_temp_V_13_fu_299_p3 = weights_V_read_reg_1082[32'd13];

assign local_temp_V_14_fu_306_p3 = weights_V_read_reg_1082[32'd14];

assign local_temp_V_15_fu_313_p3 = weights_V_read_reg_1082[32'd15];

assign local_temp_V_16_fu_320_p3 = weights_V_read_reg_1082[32'd16];

assign local_temp_V_17_fu_327_p3 = weights_V_read_reg_1082[32'd17];

assign local_temp_V_18_fu_334_p3 = weights_V_read_reg_1082[32'd18];

assign local_temp_V_19_fu_341_p3 = weights_V_read_reg_1082[32'd19];

assign local_temp_V_1_fu_215_p3 = weights_V_read_reg_1082[32'd1];

assign local_temp_V_20_fu_348_p3 = weights_V_read_reg_1082[32'd20];

assign local_temp_V_2_fu_222_p3 = weights_V_read_reg_1082[32'd2];

assign local_temp_V_3_fu_229_p3 = weights_V_read_reg_1082[32'd3];

assign local_temp_V_4_fu_236_p3 = weights_V_read_reg_1082[32'd4];

assign local_temp_V_5_fu_243_p3 = weights_V_read_reg_1082[32'd5];

assign local_temp_V_6_fu_250_p3 = weights_V_read_reg_1082[32'd6];

assign local_temp_V_7_fu_257_p3 = weights_V_read_reg_1082[32'd7];

assign local_temp_V_8_fu_264_p3 = weights_V_read_reg_1082[32'd8];

assign local_temp_V_9_fu_271_p3 = weights_V_read_reg_1082[32'd9];

assign local_temp_V_fu_212_p1 = weights_V_read_reg_1082[0:0];

assign nf_4_fu_187_p3 = ((icmp_ln302_fu_181_p2[0:0] == 1'b1) ? 32'd0 : nf_fu_175_p2);

assign nf_fu_175_p2 = (ap_sig_allocacmp_nf_3 + 32'd1);

assign out_V_TDATA = result_V_fu_1039_p2;

assign p_Result_10_fu_587_p3 = p_Val2_s_fu_96[32'd10];

assign p_Result_11_fu_611_p3 = p_Val2_s_fu_96[32'd11];

assign p_Result_12_fu_635_p3 = p_Val2_s_fu_96[32'd12];

assign p_Result_13_fu_659_p3 = p_Val2_s_fu_96[32'd13];

assign p_Result_14_fu_683_p3 = p_Val2_s_fu_96[32'd14];

assign p_Result_15_fu_707_p3 = p_Val2_s_fu_96[32'd15];

assign p_Result_16_fu_731_p3 = p_Val2_s_fu_96[32'd16];

assign p_Result_17_fu_755_p3 = p_Val2_s_fu_96[32'd17];

assign p_Result_18_fu_779_p3 = p_Val2_s_fu_96[32'd18];

assign p_Result_19_fu_803_p3 = p_Val2_s_fu_96[32'd19];

assign p_Result_1_fu_371_p3 = p_Val2_s_fu_96[32'd1];

assign p_Result_20_fu_827_p3 = p_Val2_s_fu_96[32'd20];

assign p_Result_2_fu_395_p3 = p_Val2_s_fu_96[32'd2];

assign p_Result_3_fu_419_p3 = p_Val2_s_fu_96[32'd3];

assign p_Result_4_fu_443_p3 = p_Val2_s_fu_96[32'd4];

assign p_Result_5_fu_467_p3 = p_Val2_s_fu_96[32'd5];

assign p_Result_6_fu_491_p3 = p_Val2_s_fu_96[32'd6];

assign p_Result_7_fu_515_p3 = p_Val2_s_fu_96[32'd7];

assign p_Result_8_fu_539_p3 = p_Val2_s_fu_96[32'd8];

assign p_Result_9_fu_563_p3 = p_Val2_s_fu_96[32'd9];

assign p_Result_s_fu_208_p1 = p_Val2_s_fu_96[0:0];

assign result_V_fu_1039_p2 = (icmp_ln1039_fu_1033_p2 ^ 1'd1);

assign threshs_address0 = idxprom2_i_fu_1013_p1;

assign xor_ln1019_10_fu_475_p2 = (p_Result_5_fu_467_p3 ^ local_temp_V_5_fu_243_p3);

assign xor_ln1019_11_fu_481_p2 = (xor_ln1019_10_fu_475_p2 ^ 1'd1);

assign xor_ln1019_12_fu_499_p2 = (p_Result_6_fu_491_p3 ^ local_temp_V_6_fu_250_p3);

assign xor_ln1019_13_fu_505_p2 = (xor_ln1019_12_fu_499_p2 ^ 1'd1);

assign xor_ln1019_14_fu_523_p2 = (p_Result_7_fu_515_p3 ^ local_temp_V_7_fu_257_p3);

assign xor_ln1019_15_fu_529_p2 = (xor_ln1019_14_fu_523_p2 ^ 1'd1);

assign xor_ln1019_16_fu_547_p2 = (p_Result_8_fu_539_p3 ^ local_temp_V_8_fu_264_p3);

assign xor_ln1019_17_fu_553_p2 = (xor_ln1019_16_fu_547_p2 ^ 1'd1);

assign xor_ln1019_18_fu_571_p2 = (p_Result_9_fu_563_p3 ^ local_temp_V_9_fu_271_p3);

assign xor_ln1019_19_fu_577_p2 = (xor_ln1019_18_fu_571_p2 ^ 1'd1);

assign xor_ln1019_1_fu_361_p2 = (xor_ln1019_fu_355_p2 ^ 1'd1);

assign xor_ln1019_20_fu_595_p2 = (p_Result_10_fu_587_p3 ^ local_temp_V_10_fu_278_p3);

assign xor_ln1019_21_fu_601_p2 = (xor_ln1019_20_fu_595_p2 ^ 1'd1);

assign xor_ln1019_22_fu_619_p2 = (p_Result_11_fu_611_p3 ^ local_temp_V_11_fu_285_p3);

assign xor_ln1019_23_fu_625_p2 = (xor_ln1019_22_fu_619_p2 ^ 1'd1);

assign xor_ln1019_24_fu_643_p2 = (p_Result_12_fu_635_p3 ^ local_temp_V_12_fu_292_p3);

assign xor_ln1019_25_fu_649_p2 = (xor_ln1019_24_fu_643_p2 ^ 1'd1);

assign xor_ln1019_26_fu_667_p2 = (p_Result_13_fu_659_p3 ^ local_temp_V_13_fu_299_p3);

assign xor_ln1019_27_fu_673_p2 = (xor_ln1019_26_fu_667_p2 ^ 1'd1);

assign xor_ln1019_28_fu_691_p2 = (p_Result_14_fu_683_p3 ^ local_temp_V_14_fu_306_p3);

assign xor_ln1019_29_fu_697_p2 = (xor_ln1019_28_fu_691_p2 ^ 1'd1);

assign xor_ln1019_2_fu_379_p2 = (p_Result_1_fu_371_p3 ^ local_temp_V_1_fu_215_p3);

assign xor_ln1019_30_fu_715_p2 = (p_Result_15_fu_707_p3 ^ local_temp_V_15_fu_313_p3);

assign xor_ln1019_31_fu_721_p2 = (xor_ln1019_30_fu_715_p2 ^ 1'd1);

assign xor_ln1019_32_fu_739_p2 = (p_Result_16_fu_731_p3 ^ local_temp_V_16_fu_320_p3);

assign xor_ln1019_33_fu_745_p2 = (xor_ln1019_32_fu_739_p2 ^ 1'd1);

assign xor_ln1019_34_fu_763_p2 = (p_Result_17_fu_755_p3 ^ local_temp_V_17_fu_327_p3);

assign xor_ln1019_35_fu_769_p2 = (xor_ln1019_34_fu_763_p2 ^ 1'd1);

assign xor_ln1019_36_fu_787_p2 = (p_Result_18_fu_779_p3 ^ local_temp_V_18_fu_334_p3);

assign xor_ln1019_37_fu_793_p2 = (xor_ln1019_36_fu_787_p2 ^ 1'd1);

assign xor_ln1019_38_fu_811_p2 = (p_Result_19_fu_803_p3 ^ local_temp_V_19_fu_341_p3);

assign xor_ln1019_39_fu_817_p2 = (xor_ln1019_38_fu_811_p2 ^ 1'd1);

assign xor_ln1019_3_fu_385_p2 = (xor_ln1019_2_fu_379_p2 ^ 1'd1);

assign xor_ln1019_40_fu_835_p2 = (p_Result_20_fu_827_p3 ^ local_temp_V_20_fu_348_p3);

assign xor_ln1019_41_fu_841_p2 = (xor_ln1019_40_fu_835_p2 ^ 1'd1);

assign xor_ln1019_4_fu_403_p2 = (p_Result_2_fu_395_p3 ^ local_temp_V_2_fu_222_p3);

assign xor_ln1019_5_fu_409_p2 = (xor_ln1019_4_fu_403_p2 ^ 1'd1);

assign xor_ln1019_6_fu_427_p2 = (p_Result_3_fu_419_p3 ^ local_temp_V_3_fu_229_p3);

assign xor_ln1019_7_fu_433_p2 = (xor_ln1019_6_fu_427_p2 ^ 1'd1);

assign xor_ln1019_8_fu_451_p2 = (p_Result_4_fu_443_p3 ^ local_temp_V_4_fu_236_p3);

assign xor_ln1019_9_fu_457_p2 = (xor_ln1019_8_fu_451_p2 ^ 1'd1);

assign xor_ln1019_fu_355_p2 = (p_Result_s_fu_208_p1 ^ local_temp_V_fu_212_p1);

assign zext_ln1039_fu_1029_p1 = threshs_q0;

assign zext_ln780_10_fu_607_p1 = xor_ln1019_21_fu_601_p2;

assign zext_ln780_11_fu_631_p1 = xor_ln1019_23_fu_625_p2;

assign zext_ln780_12_fu_655_p1 = xor_ln1019_25_fu_649_p2;

assign zext_ln780_13_fu_679_p1 = xor_ln1019_27_fu_673_p2;

assign zext_ln780_14_fu_703_p1 = xor_ln1019_29_fu_697_p2;

assign zext_ln780_15_fu_727_p1 = xor_ln1019_31_fu_721_p2;

assign zext_ln780_16_fu_751_p1 = xor_ln1019_33_fu_745_p2;

assign zext_ln780_17_fu_775_p1 = xor_ln1019_35_fu_769_p2;

assign zext_ln780_18_fu_799_p1 = xor_ln1019_37_fu_793_p2;

assign zext_ln780_19_fu_823_p1 = xor_ln1019_39_fu_817_p2;

assign zext_ln780_1_fu_391_p1 = xor_ln1019_3_fu_385_p2;

assign zext_ln780_2_fu_415_p1 = xor_ln1019_5_fu_409_p2;

assign zext_ln780_3_fu_439_p1 = xor_ln1019_7_fu_433_p2;

assign zext_ln780_4_fu_463_p1 = xor_ln1019_9_fu_457_p2;

assign zext_ln780_5_fu_487_p1 = xor_ln1019_11_fu_481_p2;

assign zext_ln780_6_fu_511_p1 = xor_ln1019_13_fu_505_p2;

assign zext_ln780_7_fu_535_p1 = xor_ln1019_15_fu_529_p2;

assign zext_ln780_8_fu_559_p1 = xor_ln1019_17_fu_553_p2;

assign zext_ln780_9_fu_583_p1 = xor_ln1019_19_fu_577_p2;

assign zext_ln780_fu_367_p1 = xor_ln1019_1_fu_361_p2;

assign zext_ln840_10_fu_961_p1 = add_ln840_12_fu_955_p2;

assign zext_ln840_11_fu_977_p1 = add_ln840_14_fu_971_p2;

assign zext_ln840_12_fu_993_p1 = add_ln840_16_fu_987_p2;

assign zext_ln840_13_fu_1003_p1 = add_ln840_17_fu_997_p2;

assign zext_ln840_14_fu_1020_p1 = add_ln840_18_reg_1112;

assign zext_ln840_1_fu_857_p1 = add_ln840_fu_851_p2;

assign zext_ln840_2_fu_873_p1 = add_ln840_2_fu_867_p2;

assign zext_ln840_3_fu_883_p1 = add_ln840_3_fu_877_p2;

assign zext_ln840_4_fu_893_p1 = add_ln840_4_fu_887_p2;

assign zext_ln840_5_fu_909_p1 = add_ln840_6_fu_903_p2;

assign zext_ln840_6_fu_919_p1 = add_ln840_7_fu_913_p2;

assign zext_ln840_7_fu_1017_p1 = add_ln840_8_reg_1107;

assign zext_ln840_8_fu_935_p1 = add_ln840_9_fu_929_p2;

assign zext_ln840_9_fu_951_p1 = add_ln840_11_fu_945_p2;

assign zext_ln840_fu_847_p1 = xor_ln1019_41_fu_841_p2;

endmodule //MatrixVectorActivation_3_Matrix_Vector_Activate_Stream_Batch
